{
    "pred": [
        "subtract(5829, 5735)",
        "divide(8.1, 56.0)",
        "subtract(153.7, 139.9), divide(#0, 139.9)",
        "divide(121.4, 4187.8)",
        "subtract(318.46, 132.04), divide(#0, 132.04), subtract(155.26, 140.18), divide(#2, 140.18), subtract(#1, #3)",
        "subtract(100690000, 92710000), divide(#0, 92710000)",
        "divide(463, 4612)",
        "divide(301, 2575)",
        "greater(286.61, 198.09)",
        "subtract(1136, 1171)",
        "subtract(4711, 4926), divide(#0, 4926)",
        "divide(817388, 3644331)",
        "divide(137.4, 559.3)",
        "greater(281.09, 228.97)",
        "subtract(195237, 177947), divide(#0, 177947)",
        "table_average(const_2, const_1, const_3)",
        "divide(455, 7)",
        "add(705.4, 703.1), add(#0, const_2), divide(#1, const_2)",
        "divide(15.3, 139549)",
        "add(25.0, 9.7)",
        "subtract(843, 772), divide(#0, 772)",
        "subtract(311.81, const_100), divide(#0, const_100), subtract(198.18, const_100), divide(#2, const_100), subtract(#1, #3)",
        "subtract(93.21, 86.83), divide(#0, 86.83)",
        "divide(230, 13208)",
        "divide(26900, 16900)",
        "divide(219000, 83000)",
        "divide(6.3, 18.1)",
        "subtract(201808, 139549), divide(#0, 139549)",
        "add(0.6, 0.5), add(#0, 0.6)",
        "divide(3500, 5560)",
        "divide(3581, 21813)",
        "add(3173, 5420), add(#0, 5048), add(#1, 111), add(#2, 483), add(#3, 17), add(#4, 41%), add(#5, 7740), add(#6, 78%), add(#7, 1070), add(#8, 9626), add(#9, 3682), add(#10, 351), add(#00, 896), divide(#1, 80%), divide(#2, 78), divide(#3, 80), divide(#4, 8), divide(#5, 75), divide(#6, 91), divide(#7, 92), divide(#8, 8), divide(#9, 9), divide(#10, 8), divide(#00, 80%), divide(#1, 80), divide(#2, 8), divide(#3, 8), divide(#4, 8), divide(#5, 8), divide(#6, 8), divide(#7, 8), divide(#8, 8), divide(#9, 8), divide(#10, 8), divide(#00, 8), divide(#1, 8), divide(#2, 8), divide(#3, 8), divide(#4, 8), divide(#5, 8), divide(#6, 8), divide(#7, 8), divide(#8, 8), divide(#9, 8), divide(#10, 8), divide(#00, 8), divide(#1, 8), divide(#2, 8), divide(#3, 8), divide(#4, 8), divide(#5, 8), divide(#6, 8), divide(#7, 8), divide(#8, 8), divide(#9, 8), divide(#10, 8), divide(#00, 8), divide(#1, 8), divide(#2, 8), divide(#3, 8), divide(#4, 8), divide(#5, 8), divide(#6, 8), divide(#7, 8), divide(#8, 8), divide(#9, 8), divide(#10, 8), divide(#00, 8), divide(#1, 8), divide(#2, 8), divide(#3, 8), divide(#4, 8), divide(#5, 8), divide(#6, 8), divide(#7, 8), divide(#8, 8), divide(#9, 8), divide(#10, 8), divide(#00, 8), divide(#1, 8), divide(#2, 8), divide(#3, 8), divide(#4, 8), divide(#5, 8), divide(#6, 8), divide(#7, 8), divide(#8, 8), divide(#9, 8), divide(#10, 8), divide(#00, 8), divide(#1, 8), divide(#2, 8), divide(#3, 8), divide(#4, 8), divide(#5, 8), divide(#6, 8), divide(#7, 8), divide(#8, 8), divide(#9, 8), divide(#10, 8), divide(#00, 8), divide(#1, 8), divide(#2, 8), divide(#3, 8), divide(#4, 8), divide(#5, 8), divide(#6, 8), divide(#7, 8), divide(#8, 8), divide(#9, 8), divide(#10, 8), divide(#00, 8), divide(#1, 8), divide(#2, 8), divide(#3, 8), divide(#4, 8), divide(#5, 8), divide(#6, 8), divide(#7, 8), divide(#8, 8), divide(#9, 8), divide(#10, 8), divide(#00, 8), divide(#1, 8), divide(#2, 8), divide(#3, 8), divide(#4, 8), divide(#5, 8), divide(#6, 8), divide(#7, 8), divide(#8, 8), divide(#9, 8), divide(#10, 8), divide(#00, 8), divide(#1, 8), divide(#2, 8), divide(#3, 8), divide(#4, 8), divide(#5, 8), divide(#6, 8), divide(#7, 8), divide(#8, 8), divide(#9, 8), divide(#10, 8), divide(#00, 8), divide(#1, 8), divide(#2, 8), divide(#3, 8), divide(#4, 8), divide(#5, 8), divide(#6, 8), divide(#7, 8), divide(#8, 8), divide(#9, 8), divide(#10, 8), divide(#00, 8), divide(#1, 8), divide(#2, 8), divide(#3, 8), divide(#4, 8), divide(#5, 8), divide(#6, 8), divide(#7, 8), divide(#8, 8), divide(#9, 8), divide(#10, 8), divide(#00, 8), divide(#1, 8), divide(#2, 8), divide(#3, 8), divide(#4, 8), divide(#5, 8), divide(#6, 8), divide(#7, 8), divide(#8, 8), divide(#9, 8), divide(#10, 8), divide(#00, 8), divide(#1, 8), divide(#2, 8), divide(#3, 8), divide(#4, 8), divide(#5, 8), divide(#6, 8), divide(#7, 8), divide(#8, 8), divide(#9, 8), divide(#10, 8), divide(#00, 8), divide(#1, 8), divide(#2, 8), divide(#3, 8), divide(#4, 8), divide(#5, 8), divide(#6, 8), divide(#7, 8), divide(#8, 8), divide(#9, 8), divide(#10, 8), divide(#00, 8), divide(#1, 8), divide(#2, 8), divide(#3, 8), divide(#4, 8), divide(#5, 8), divide(#6, 8), divide",
        "table_max(provision for income taxes, none)",
        "divide(3087, 55687) 0.54",
        "subtract(48609, 367)",
        "subtract(168, const_2), multiply(#0, const_100)",
        "divide(254000, 165000)",
        "divide(219000, 25000)",
        "add(4.6, 5.5), add(#0, 2.0)",
        "add(1939734, 1937141)",
        "subtract(1854, 2045)",
        "subtract(248.36, 100.00), divide(#0, 100.00), subtract(236.20, 100.00), divide(#2, 100.00), subtract(#1, #3)         Possible Programs subtract(arg1, arg2), divide(#0, arg2), subtract(arg1, arg2), divide(#2, arg2), subtract(#1, #3)        Correct Answer subtract(248.36, 100.00), divide(#0, 100.00), subtract(236.20, 100.00), divide(#2, 100.00), subtract(#1, #3)         Similar Question what was the difference in percentage cumulative total return for the five year period ending 12/31/2013 between the standard & poor's 500 index and the s&p 500 financial index?    Similar Program subtract(arg1, arg2), divide(#0, arg2), subtract(arg1, arg2), divide(#2, arg2), subtract(#1, #3)    Similar Question what was the difference in percentage cumulative total return for the five year period ending 12/31/2013 between the standard & poor's 500 index and the s&p 500 financial index?    Similar Program subtract(arg1, arg2), divide(#0, arg2), subtract(arg1, arg2), divide(#2, arg2), subtract(#1, #3)    Similar Question what was the difference in percentage cumulative total return for the five year period ending 12/31/2013 between the standard & poor's 500 index and the s&p 500 financial index?    Similar Program subtract(arg1, arg2), divide(#0, arg2), subtract(arg1, arg2), divide(#2, arg2), subtract(#1, #3)    Similar Question what was the difference in percentage cumulative total return for the five year period ending 12/31/2013 between the standard & poor's 500 index and the s&p 500 financial index?    Similar Program subtract(arg1, arg2), divide(#0, arg2), subtract(arg1, arg2), divide(#2, arg2), subtract(#1, #3)    Similar Question what was the difference in percentage cumulative total return for the five year period ending 12/31/2013 between the standard & poor's 500 index and the s&p 500 financial index?    Similar Program subtract(arg1, arg2), divide(#0, arg2), subtract(arg1, arg2), divide(#2, arg2), subtract(#1, #3)    Similar Question what was the difference in percentage cumulative total return for the five year period ending 12/31/2013 between the standard & poor's 500 index and the s&p 500 financial index?    Similar Program subtract(arg1, arg2), divide(#0, arg2), subtract(arg1, arg2), divide(#2, arg2), subtract(#1, #3)    Similar Question what was the difference in percentage cumulative total return for the five year period ending 12/31/2013 between the standard & poor's 500 index and the s&p 500 financial index?    Similar Program subtract(arg1, arg2), divide(#0, arg2), subtract(arg1, arg2), divide(#2, arg2), subtract(#1, #3)    Similar Question what was the difference in percentage cumulative total return for the five year period ending 12/31/2013 between the standard & poor's 500 index and the s&p 500 financial index?    Similar Program subtract(arg1, arg2), divide(#0, arg2), subtract(arg1, arg2), divide(#2, arg2), subtract(#1, #3)    Similar Question what was the difference in percentage cumulative total return for the five year period ending 12/31/2013 between the standard & poor's 500 index and the s&p 500 financial index?    Similar Program subtract(arg1, arg2), divide(#0, arg2), subtract(arg1, arg2), divide(#2, arg2), subtract(#1, #3)    Similar Question what was the difference in percentage cumulative total return for the five year period ending 12/31/2013 between the standard & poor's 500 index and the s&p 500 financial index?    Similar Program subtract(arg1, arg2), divide(#0, arg2), subtract(arg1, arg2), divide(#2, arg2), subtract(#1, #3)    Similar Question what was the difference in percentage cumulative total return for the five year period ending 12/31/2013 between the standard & poor's 500 index and the s&p 500 financial index?    Similar Program subtract(arg1, arg2), divide(#0, arg2), subtract(arg1, arg2), divide(#2, arg2), subtract(#1, #3)    Similar Question what was the difference in percentage cumulative total return for the five year period ending 12/31/2013 between the standard & poor's 500 index and the s&p 500 financial index?    Similar Program subtract(arg1, arg2), divide(#0, arg2), subtract(arg1, arg2), divide(#2, arg2), subtract(#1, #3)    Similar Question what was the difference in percentage cumulative total return for the five year period ending 12/31/2013 between the standard & poor's 500 index and the s&p 500 financial index?    Similar Program subtract(arg1, arg2), divide(#0, arg2), subtract(arg1, arg2), divide(#2, arg2), subtract(#1, #3)    Similar Question what was the difference in percentage cumulative total return for the five year period ending 12/31/2013 between the standard & poor's 500 index and the s&p 500 financial index?    Similar Program subtract(arg1, arg2), divide(#0, arg2), subtract(arg1, arg2), divide(#2, arg2), subtract(#1, #3)    Similar Question what was the difference in percentage cumulative total return for the five year period ending 12/31/2013 between the standard & poor's 500 index and the s&p 500 financial index?    Similar Program subtract(arg1, arg2), divide(#0, arg2), subtract(arg1, arg2), divide(#2, arg2), subtract(#1, #3)    Similar Question what was the difference in percentage cumulative total return for the five year period ending 12/31/2013 between the standard & poor's 500 index and the s&p 500 financial index?    Similar Program subtract(arg1, arg2), divide(#0, arg2), subtract(arg1, arg2), divide(#2, arg2), subtract(#1, #3)    Similar Question what was the difference in percentage cumulative total return for the five year period ending 12/31/2013 between the standard & poor's 500 index and the s&p 500 financial index?    Similar Program subtract(arg1, arg2), divide(#0, arg2), subtract(arg1, arg2), divide(#2, arg2), subtract(#1, #3)    Similar Question what was the difference in percentage cumulative total return for the five year period ending 12/31/2013 between the standard & poor's 500 index and the s&p 500 financial index?    Similar Program subtract(arg1, arg2), divide(#0, arg2), subtract(arg1, arg2), divide(#2, arg2), subtract(#1, #3)    Similar Question what was the difference in percentage cumulative total return for the five year period ending 12/31/2013 between the standard & poor's 500 index and the s&p 500 financial index?    Similar Program subtract(arg1, arg2), divide(#0, arg2), subtract(arg1, arg2), divide(#2, arg2), subtract(#1, #3)    Similar Question what was the difference in percentage cumulative total return for the five year period ending 12/31/2013 between the standard & poor's 500 index and the s&p 500 financial index?    Similar Program subtract(arg1, arg2), divide(#0, arg2), subtract(arg1, arg2), divide(#2, arg2), subtract(#1, #3)    Similar Question what was the difference in percentage cumulative total return for the five year period ending 12/31/2013 between the standard & poor's 500 index and the s&p 500 financial index?    Similar Program subtract(arg1, arg2), divide(#0, arg2), subtract(arg1, arg2), divide(#2, arg2), subtract(#1, #3)    Similar Question what was the difference in percentage cumulative total return for the five year period",
        "multiply(160196, 58.02)",
        "divide(460.1, 1020.1)",
        "add(957.4, 769.1), add(#0, 1229.0), divide(#1, const_3)",
        "multiply(766801, 40.85), divide(#0, const_1000000)",
        "subtract(1909, 1336), divide(#0, 1336)",
        "subtract(765.2, 559.7), divide(#0, 559.7)",
        "divide(10.4, 61.4)",
        "divide(205000, 630000)",
        "subtract(1131, 1165), divide(#0, 1165)",
        "divide(0.5, 19.3)",
        "multiply(1.88, 121)",
        "divide(3.0, 252164)",
        "subtract(426.6, 380.2), divide(#0, 380.2)",
        "divide(2800, 73200)",
        "subtract(63.43, 48.00), divide(#0, 48.00)",
        "divide(10.8, 112.7)",
        "subtract(26.4, 18.6), divide(#0, 18.6)",
        "add(411636, 439000), add(#0, 556000), divide(#1, const_3)",
        "subtract(11.2, 8.8), divide(#0, 8.8)",
        "divide(294, -23)",
        "multiply(1211143, 308.10)",
        "subtract(141, 110)",
        "subtract(194, 191), divide(#0, 191)",
        "greater(28000, 2014)",
        "divide(116, 216)",
        "divide(48609, 59801)",
        "multiply(const_100, 15)",
        "divide(843, 2936)",
        "divide(604.2, 13440.0)",
        "subtract(164, 199), divide(#0, 199)",
        "divide(1211143, 1217121)",
        "divide(125, 100), divide(#0, 100)",
        "subtract(201, 100)",
        "subtract(11.02, 9.52), divide(#0, 9.52)",
        "add(176, 850)",
        "subtract(21, 47)",
        "add(78227, 81808)",
        "subtract(207.62, 97.13), divide(#0, const_2), subtract(100.00, #2)",
        "subtract(207.62, 107.76), divide(#0, 100), subtract(107.76, 100), divide(#2, 100), subtract(#1, #3)         Possible Programs subtract(arg1, arg2), divide(#0, const), subtract(arg1, const), divide(#2, const), subtract(#1, #3)        Possible Arguments ['107.76', '100', '12/31/2012', '1000000000', '1000000', '10000000', '1000000', '100000', '10000', '1000', '207.62', '107.76', '10000000000', '10000000', '1000000', '100000', '1000', '100.00', '155.14', '117.01', '164.09', '97.78', '84.76', '61.55', '12/31/2009', '12/31/2011', '12/31/2010', '12/31/2012', '12/31/2008', '96.27', '61.51', '85.65', '12/31/2007', '93.28', '500', '75.94', 's&p 500', 'ball corporation', '97.13', 'dj us containers & packaging'] ['const_2', 'const_1', 'const_3', 'const_4', 'const_5', 'const_6', 'const_7', 'const_8', 'const_9', 'const_10', 'const_100', 'const_1000', 'const_10000', 'const_100000', 'const_1000000', 'const_10000000', 'const_10000000000', 'const_m1', '#0', '#1', '#2', '#3', '#4', '#5', '#6', '#7', '#8', '#9', '#10', 'none']         Question the five year total return for the period ending 12/31/2012 on ball corporation stock was how much greater than the same return on the dj us containers & packaging index?",
        "divide(37, 1.4)",
        "divide(102400, 15790)",
        "divide(74360, 180993)",
        "subtract(1.11, 1.08), divide(#0, 1.08)",
        "divide(1160, 2575)",
        "subtract(100.00, 80.20), divide(#0, 80.20)",
        "divide(40, 104)",
        "subtract(368, 68)",
        "subtract(34.3, 38.9), divide(#0, 38.9)",
        "divide(45686, 37.73)",
        "multiply(496, const_1000), divide(#0, 6930)",
        "table_average(operating income, none)",
        "subtract(426932, 341003)",
        "subtract(137.90, 100.00), divide(#0, 100.00)",
        "add(362400, 100000)",
        "subtract(121.48, 100.00), divide(#0, 100.00)",
        "subtract(746, 554)",
        "subtract(63003, 23596), divide(#0, 23596)",
        "divide(180993, 158578)",
        "subtract(224.65, 100.00), divide(#0, 100.00)",
        "divide(const_1000000, const_3332)",
        "divide(11057, 57096)",
        "subtract(42, 42), divide(#0, 42)",
        "divide(2715, 4932)",
        "table_average(ending balance, none)",
        "divide(1.0, 1.4)",
        "subtract(230667, 255534), divide(#0, 255534)",
        "divide(242, 9%)",
        "subtract(30, 4)",
        "subtract(108.11, 118.09), divide(#0, 118.09)",
        "subtract(772, 1.2)",
        "divide(13536, 16594)",
        "subtract(2220, 1522), divide(#0, 1522)",
        "table_average(586, none)",
        "add(367, 581), add(#0, 78)",
        "add(619, 1782, 10527, 8026, 3828, 3465, 562), add(#0, 8026, 3828, 3465), add(#1, 8026, 3828, 3465)",
        "subtract(15973855, 1589673), divide(#0, 1589673)",
        "subtract(37.79, 24.19), divide(#0, 24.19)",
        "subtract(140, 164)",
        "add(27229, 53818), add(36528, #0), add(#1, const_1000), add(#2, const_1000000), add(#3, const_10000000), add(#4, const_1000000000), add(#5, const_10000000), add(#6, const_1000000), add(#7, const_100000), add(#8, const_1000), add(#9, const_10000), add(#10, const_100), add(#100, const_1000000), add(#1000, const_100000), add(#10000, const_100000), add(#100000, const_1000000), add(#1000000, const_1000000), add(#10000000, const_1000000), add(#1000000000, const_10000000), add(#10000000000, const_1000000000), add(#100000000000, const_10000000000) ] ['const_2', 'const_1', 'const_3', 'const_4', 'const_5', 'const_6', 'const_7', 'const_8', 'const_9', 'const_10', 'const_100', 'const_1000', 'const_10000', 'const_100000', 'const_1000000', 'const_10000000', 'const_1000000000', 'const_m1', '#0', '#1', '#2', '#3', '#4', '#5', '#6', '#7', '#8', '#9', '#10', 'none'] ['const_1000000000', 'const_10000000', 'const_10000000', 'const_1000000000', 'const_1000000000', 'const_10000000000', 'const_10000000000', 'const_100000000000', 'const_100000000000', 'const_100000000000', 'const_100000000000', 'const_1000000000000', 'const_1000000000000', 'const_1000000000000', 'const_10000000000000', 'const_10000000000000', 'const_100000000000000', 'const_100000000000000', 'const_1000000000000000', 'const_1000000000000000', 'const_10000000000000000', 'const_100000000000000000', 'const_100000000000000000', 'const_1000000000000000000', 'const_10000000000000000000', 'const_10000000000000000000', 'const_100000000000000000000', 'const_100000000000000000000', 'const_100000000000000000000', 'const_100000000000000000000', 'const_1000000000000000000000', 'const_100000000000000000000', 'const_100000000000000000000', 'const_100000000000000000000', 'const_100000000000000000000', 'const_100000000000000000000', 'const_100000000000000000000', 'const_10000000000000000000', 'const_10000000000000000000', 'const_10000000000000000000', 'const_100000000000000000000', 'const_1000000000000000000000', 'const_1000000000000000000000', 'const_100000000000000000000', 'const_1000000000000000000000', 'const_1000000000000000000000', 'const_1000000000000000000000', 'const_100000000000000000000', 'const_1000000000000000000000', 'const_100000000000000000000', 'const_100000000000000000000', 'const_10000000000000000000', 'const_100000000000000000000', 'const_100000000000000000000', 'const_100000000000000000000', 'const_10000000000000000000', 'const_100000000000000000000', 'const_10000000000000000000', 'const_10000000000000000000', 'const_10000000000000000000', 'const_100000000000000000000', 'const_100000000000000000000', 'const_100000000000000000000', 'const_1000000000000000000000', 'const_100000000000000000000', 'const_100000000000000000000', 'const_1000000000000000000000', 'const_1000000000000000000000', 'const_100000000000000000000', 'const_1000000000000000000000', 'const_1000000000000000000000', 'const_10000000000000000000000', 'const_10000000000000000000000', 'const_10000000000000000000000', 'const_10000000000000000000000', 'const_10000000000000000000000', 'const_1000000000000000000000', 'const_10000000000000000000000', 'const_10000000000000000000000', 'const_1000000000000000000000', 'const_1000000000000000000000', 'const_1000000000000000000000', 'const_1000000000000000000000', 'const_1000000000000000000000', 'const_1000000000000000000000', 'const_1000000000000000000000', 'const_1000000000000000000000', 'const_1000000000000000000000', 'const_1000000000000000000000', 'const_10000000000000000000000', 'const_1000000000000000000000', 'const_1000000000000000000000', 'const_10000000000000000000000', 'const_10000000000000000000000', 'const_1000000000000000000000', 'const_10000000000000000000000', 'const_10000000000000000000000', 'const_1000000000000000000000', 'const_10000000000000000000000', 'const_1000000000000000000000', 'const_100000000000000000000000', 'const_10000000000000000000000', 'const_10000000000000000000000', 'const_100000000000000000000000', 'const_100000000000000000000000', 'const_10000000000000000000000', 'const_1000000000000000000000000', 'const_10000000000000000000000000', 'const_10000000000000000000",
        "divide(1246, 5424)",
        "divide(184, 327)",
        "divide(521.3, 655.0)",
        "subtract(208.14, const_100)        Possible",
        "divide(102400, 619314)",
        "subtract(509, 707), divide(#0, 707)",
        "add(12.1, 9.0), add(5.7, #0)",
        "divide(5186, 9062)",
        "divide(151.7, 800)",
        "subtract(301.96, 102.53), divide(#0, 102.53)",
        "subtract(25.2, 6.1), divide(#0, 6.1)",
        "divide(120000, 120000)",
        "divide(1095.6, 2719.3)",
        "add(217692, 14399), add(#0, 149614), divide(#1, 146915)",
        "divide(117, 2473)",
        "subtract(15.6, 21.1), divide(#0, 21.1), multiply(#1, const_100)",
        "subtract(57, 41), divide(#0, 41)",
        "subtract(726, 1010)",
        "divide(2013, 2012), multiply(#0, 2012)",
        "subtract(109435, 73684), divide(#0, 73684)",
        "subtract(2.36, 2.25)",
        "greater(495.2, 574438)",
        "table_average(residential mortgage, none)",
        "add(187, 95), add(#0, 5735)",
        "divide(895, 4625)",
        "subtract(11, 11)",
        "divide(541, 2859)",
        "greater(370.32, 208.14)",
        "divide(2047, 6154)",
        "divide(1336, const_1000)",
        "subtract(109.80, 100.00), divide(100.00, 100.00), multiply(#1, #0)         Correct Answer 89.2%        Possible Answer subtract(109.80, 100.00), divide(100.00, 100.00), multiply(#1, #0)         Similar Question what is the total return if 1000000 is invested in s&p500 in 2008 and sold in 2012?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2011 and sold in 2015?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2010 and sold in 2015?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2009 and sold in 2014?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2009 and sold in 2014?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2012 and sold in 2016?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2007 and sold in 2012?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2006 and sold in 2011?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2007 and sold in 2013?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2008 and sold in 2013?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2009 and sold in 2015?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2010 and sold in 2015?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2006 and sold in 2011?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2005 and sold in 2010?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2004 and sold in 2009?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2003 and sold in 2008?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2002 and sold in 2007?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2001 and sold in 2006?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2000 and sold in 2005?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2017 and sold in 2020?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2018 and sold in 2020?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2016 and sold in 2019?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2015 and sold in 2019?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2014 and sold in 2019?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2012 and sold in 2019?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2011 and sold in 2019?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2006 and sold in 2013?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2005 and sold in 2013?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2004 and sold in 2013?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2003 and sold in 2013?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2002 and sold in 2013?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2001 and sold in 2013?        Similar Program subtract(arg1, const), divide(arg1, const), multiply(#1, #0)        Similar Question what is the total return if 1000000 is invested in s&p 500 index in 2000 and sold in 2013?",
        "subtract(3.9, 4.0), divide(#0, 4.0)",
        "divide(6900, 31300)",
        "multiply(1.8, 64.20)",
        "subtract(21, 47), divide(#0, 47)",
        "multiply(1226, 78.29)",
        "divide(112, 1178)",
        "divide(6498, 195237)",
        "divide(10, 3)",
        "multiply(110000000, const_1000)",
        "subtract(0.2, 9.4)",
        "divide(12, 29)",
        "subtract(52.25, 39.95)",
        "divide(2424, 7034)",
        "add(240316, 206017), add(#0, 230323), divide(#1, const_3)         Possible Programs add(240316, 206017), add(#0, 230323), divide(#1, const_3)",
        "subtract(197.92, 150.27), divide(#0, 150.27)",
        "subtract(119, 86)",
        "table_max(tier 2 capital, none)",
        "divide(332, 10591)",
        "subtract(3.7, 3.5), divide(#0, 3.5)",
        "subtract(79.0, 53.9), divide(#0, 53.9), multiply(#1, const_100)",
        "table_min(cash instruments, none)",
        "subtract(55509, 11589)",
        "add(189, 2605)",
        "subtract(335.9, 364.2), divide(#0, 364.2)",
        "subtract(31.9, 33.9)",
        "greater(57.7, 68.9)",
        "table_sum(distillates, none)",
        "greater(162.45, 74.40)",
        "subtract(107.76, 61.55), divide(#0, 61.55)",
        "subtract(24, 4)",
        "multiply(37.73, 34526)",
        "subtract(128.16, 100.00), divide(#0, 100.00)",
        "divide(692, 3165)",
        "subtract(180993, 158578), divide(#0, 158578)",
        "subtract(44.11, 39.03)",
        "divide(14684, 53584)",
        "add(49250000, 22825000)",
        "table_average(operating profit, none)",
        "divide(3.3, const_1000)",
        "multiply(const_100, const_3), multiply(#0, 26.93)",
        "multiply(151945, 24.61)",
        "subtract(17.80, 11.60)",
        "divide(20, 23)",
        "subtract(186, 26), divide(#0, 26)",
        "divide(510, 6652)",
        "multiply(2770, 21.96)",
        "divide(78.6, 108.1)",
        "divide(1.074, 1.209)",
        "add(380, 383), add(#0, 385), divide(#1, const_2)",
        "divide(2467.1, 502.9)",
        "subtract(7.2, 5.5)",
        "divide(57800, 163000)",
        "subtract(240.9, 2.6), divide(#0, 2.6)",
        "subtract(772709, 426932), divide(#0, 426932)",
        "divide(23000, 122300)",
        "divide(2449.9, 15191.5), divide(#0, 15191.5)",
        "add(2.0, 1.0), add(#0, 4.6), divide(#1, const_2)",
        "subtract(438, 291), divide(#0, 291)",
        "divide(9.9, 146.1)",
        "multiply(1023202, 110.17), divide(#0, const_1000000)",
        "divide(8.75, 6.25), multiply(#0, 7.3)",
        "subtract(19600, 5200)",
        "add(6725, 3189), divide(#0, 11664)",
        "subtract(705.4, 696.3), divide(#0, 696.3)",
        "subtract(41.9, 121.0)",
        "divide(5080, 45708)",
        "divide(18.1, 6.3)",
        "subtract(2.2, 1.4), divide(#0, 1.4)",
        "table_average(total assets, none)",
        "subtract(6850, 6213), divide(#0, 6213)",
        "subtract(1.6, 1.2), divide(#0, 1.2)",
        "divide(2.13, const_1000)",
        "divide(13536, 16594)",
        "add(711, 12)",
        "divide(1024, 5545)",
        "divide(1309, const_1000), divide(#0, 100)",
        "divide(630, 700)",
        "add(1708928, 3629455), divide(1708928, #0)",
        "subtract(378, 419), divide(#0, 419)",
        "subtract(24, 31), divide(#0, 31)",
        "add(171.8, 1.5)",
        "divide(955, 4925)",
        "subtract(509, 48.87), divide(#0, 48.87)",
        "add(17.3, 19.8), add(#0, 21.9), divide(#1, const_3)",
        "subtract(687125, 650212), divide(#0, 650212)",
        "divide(126, 992)",
        "subtract(6608, 1018)",
        "add(19.3, 17.6)",
        "add(760000, 857679), add(#0, 898500), add(#1, 960764), add(#2, 1304431)",
        "subtract(5829, 5735), divide(#0, 5735)",
        "subtract(63, 51), divide(#0, 51)",
        "add(5400, 5038), add(#0, 7729), add(#1, const_3), divide(#2, const_2)",
        "subtract(121.04, 100.00), divide(#0, 100.00)",
        "subtract(109669, 112824)",
        "divide(144, 2473)",
        "divide(503000, 298)",
        "divide(24700, 101500)",
        "divide(1127.6, 2719.3)",
        "multiply(5, const_1)",
        "divide(2140954, 151945)",
        "divide(808043, 3316258)",
        "subtract(5829, 5735), divide(#0, 5735)",
        "subtract(23778, 21376)",
        "divide(30.7, 56.0)",
        "subtract(495.2, 419.0), divide(#0, 419.0)",
        "divide(43634, 94205)",
        "divide(92, 1)",
        "subtract(8.2, 5.5)",
        "subtract(1636, 5205), divide(#0, 5205)",
        "subtract(138.19, 104.23), divide(#0, 104.23)",
        "add(21.7, 22.3)",
        "subtract(148.9, 127.1), divide(#0, 148.9)",
        "table_max(provision for credit losses, none)",
        "add(57800, 163000), add(#0, 163000), add(#1, 163000), divide(57800, #2)",
        "add(240316, 217052), add(#0, 206017), divide(#1, const_3)         Possible Programs add(arg1, arg2), add(#0, arg2), divide(#1, const_3)",
        "add(602, 170)",
        "subtract(4.70, const_4), divide(#0, const_2), subtract(4.50, #1), divide(#2, const_2), subtract(#3, #1)",
        "divide(131.8, 148.8)",
        "divide(107, 66)",
        "subtract(572.93, 527.37), divide(#0, 527.37)",
        "subtract(3277, 2880), divide(#0, 2880)",
        "subtract(207.62, 100.00), divide(#0, 100.00)",
        "subtract(378.5, 43.3), divide(#0, 43.3)",
        "subtract(10.5, 7.1), divide(#0, 7.1)",
        "add(99, 21)",
        "divide(560, 1203)",
        "add(19, 81), divide(19, #0)",
        "divide(149.3, 1020.1)",
        "greater(1.09, 231.87)",
        "subtract(384102, 381415)",
        "subtract(459.8, 442.9), divide(#0, 442.9)",
        "subtract(1224, 1219)",
        "divide(116, 1009)",
        "subtract(655.0, 495.2), divide(#0, 495.2)",
        "divide(2.5, 1.6)",
        "add(64001, 289581)",
        "subtract(752707, 593356), divide(#0, 593356)",
        "divide(4214600, 6903188)",
        "subtract(779, 850), divide(#0, 850)",
        "divide(13789, 16054)",
        "subtract(71267, 58219), divide(#0, 71267)",
        "divide(460.1, 1020.1)",
        "subtract(18100, 18900), divide(#0, 18900)",
        "divide(3.9, 12.8)",
        "subtract(289, 270)",
        "subtract(16.8, 17.7), divide(#0, 17.7)",
        "add(104, 61), add(#0, 73), add(#1, const_3), divide(#2, const_2)",
        "subtract(42.1, 38), divide(#0, 38)",
        "subtract(291, 599), divide(#0, 599)",
        "add(0.3, 0.1)",
        "add(23000, 70000)",
        "subtract(911507, 938555), divide(#0, 938555)",
        "divide(42.5, 61592)",
        "divide(2672, 22258)",
        "subtract(2984, 5236)",
        "subtract(155, 148), divide(#0, 148)",
        "subtract(22.1, 24.0), divide(#0, 24.0)",
        "divide(254000, 107000)",
        "subtract(3.5, 5.3), divide(#0, 5.3)",
        "divide(22, 158)",
        "subtract(74, 110)",
        "subtract(9, 2)",
        "subtract(35.0, 13.7%)",
        "multiply(78.5, 342.9)",
        "subtract(370.32, 164.01)        Possible Programs subtract(arg1, arg2), divide(#0, const_5)",
        "divide(264, 210)",
        "subtract(355173, 377677), divide(#0, 377677)",
        "divide(57, const_100)",
        "subtract(19201, 23280), divide(#0, 23280)",
        "divide(1205260, 3063816)",
        "greater(4, 1)",
        "subtract(1.2, 665), divide(#0, 1.2)",
        "subtract(56499000, 46899000), divide(#0, 46899000)",
        "subtract(318063, 110457)",
        "divide(332, 121)",
        "divide(200.79, 151.94)",
        "multiply(400.0, const_1000), add(#0, 2007), divide(#1, 4.25)",
        "divide(6.2, 10.0)",
        "subtract(7327, 496)",
        "subtract(2.9, 1.5), divide(#0, 1.5)",
        "subtract(176, 100)",
        "divide(1400000, 17)",
        "subtract(190, 207)",
        "table_average(initial health care trend rate, none)",
        "subtract(248.36, 100.00)",
        "subtract(168.4, 148.5), divide(#0, 148.5)",
        "divide(14.9, 531.6)",
        "subtract(30.3, 26.2), divide(#0, 26.2)",
        "divide(35, 130)",
        "divide(1.3, 804)",
        "subtract(16.9, 14.9)",
        "subtract(177.79, 125.60), divide(125.60, const_100), multiply(#1, const_2)",
        "divide(265409, 296554)",
        "divide(23.5, 18.0)",
        "table_average(in millions, none)",
        "add(66299, 153644), add(#0, 420050)",
        "add(22, 20)",
        "divide(9981, 93033)",
        "multiply(713, 42)",
        "divide(5009, 6304)",
        "divide(4904, 5051)",
        "subtract(171.8, 1.5), add(#0, 170.3)",
        "subtract(311.81, 100.00), divide(#0, 100.00)",
        "subtract(205, 168), divide(#0, 168)",
        "divide(2327.2, 13981.9), divide(#0, const_2)",
        "subtract(46957000, 27316000), divide(#0, 27316000)",
        "divide(7001, 684)",
        "subtract(71267, 3468)",
        "subtract(17057.4, 16772.9), divide(#0, 16772.9)",
        "multiply(2.6, 100)",
        "divide(260, 7439)",
        "divide(1088, 4944)",
        "divide(4959, 989)",
        "subtract(931.3, 973.7), divide(#0, 973.7)",
        "divide(5145, 6015)",
        "add(60.15, 41.30), divide(#0, const_2)",
        "subtract(18900, 20500)",
        "subtract(102.77, 100.00), divide(#0, 100.00), multiply(100, #1)",
        "divide(47162, 83659)",
        "divide(const_100, 4)",
        "add(169, 138)",
        "subtract(515.2, 559.7), divide(#0, 559.7)",
        "subtract(172, 265)",
        "subtract(314.36, const_100), divide(#0, const_100), subtract(223.74, const_100), divide(#2, const_100), subtract(#1, #3)",
        "subtract(28.9, 27.8), divide(#0, 27.8)",
        "subtract(7167.1, 6490.8), divide(#0, 6490.8)",
        "divide(45826, 182650)",
        "divide(6% , 7.66)",
        "divide(472.7, 635.6)",
        "subtract(301, 2239), divide(#0, 2239), multiply(#1, const_100)",
        "subtract(931.3, 973.7), divide(#0, 973.7)",
        "divide(65.7, 473.6)",
        "divide(900.1, 2.9)",
        "subtract(59.7, 79.0)",
        "add(0.6, 0.7)",
        "divide(115.7, 559.3)",
        "multiply(561, 44)",
        "subtract(8985, 11057), divide(#0, 11057)",
        "subtract(857679, 760000), divide(#0, 760000)",
        "divide(153258, 86080)",
        "multiply(const_100, const_2)",
        "subtract(677, 372)",
        "subtract(27.1, 26.4), divide(#0, 26.4)",
        "table_min(collateral posted, none)",
        "divide(165.7, 802.6)",
        "divide(2360, 6596)",
        "subtract(2.93, 182)",
        "add(500, 750), divide(#0, 11664), multiply(#1, const_2)",
        "subtract(35.0% ( 35.0 % ), 24.4% ( 24.4 % ))",
        "subtract(7.7, 19.6)",
        "add(81, 8), divide(81, #0)",
        "add(0.6, 0.1), add(#0, 497)",
        "divide(11057, 57096)",
        "add(172, 179), add(#0, 147)",
        "subtract(23000, 0.1), divide(#0, 0.1)",
        "subtract(2.6, 1.4)",
        "divide(24, 108.55)",
        "divide(10558, 23556)",
        "add(5536, 38519), add(#0, -5536)",
        "divide(70, 53), subtract(#0, const_1)",
        "table_min(foreign currency translation, none)",
        "subtract(322.4, 326.5)",
        "divide(const_100, 4091)",
        "subtract(284, 118)",
        "divide(2094800, 6156900)",
        "divide(3321, 7975)",
        "subtract(618.3, 548.8), divide(#0, 548.8)",
        "subtract(2239, 823)",
        "subtract(156, 15), divide(#0, 15)",
        "add(45, 54), divide(#0, 0.6), multiply(#1, const_1000)",
        "divide(57, 320)",
        "divide(39, 4)",
        "table_sum(total, none)",
        "subtract(324502, 308263), divide(#0, 308263)",
        "greater(193.28, 151.74)",
        "divide(231, 6304)",
        "subtract(1837, 2305054)",
        "subtract(3543016, 400.0), divide(#0, 400.0)",
        "subtract(46.7, 38.9), divide(#0, 38.9)",
        "divide(86, 5070)",
        "subtract(15973855, 1381518), divide(#0, 15973855)",
        "subtract(25.25, 17.90), divide(#0, 17.90)",
        "subtract(1589, 1141)",
        "subtract(206.49, 169.82), divide(#0, 169.82)",
        "divide(3671500, 2094800)",
        "subtract(178.8, 133.6), divide(#0, 133.6), subtract(100.0, 123.8), divide(#2, 123.8), subtract(#1, #3)         Possible Programs subtract(178.8, 133.6), divide(#0, 133.6), subtract(100.0, 123.8), divide(#2, 123.8), subtract(#1, #3)        Similar Question what was the difference in percentage return of sysco corporation and the s&p 500 for the five years ended 7/2/11?        Similar Program subtract(arg1, arg2), divide(#0, arg2), subtract(arg1, arg2), divide(#2, arg2), subtract(#1, #3)        Similar Question what was the difference in percentage return of a o smith corp and the s&p 500 for the five years ended 12/31/07?        Similar Program subtract(arg1, const), divide(#0, const), subtract(arg1, const), divide(#2, const), subtract(#1, #3)        Similar Question what was the difference in percentage return of a o smith corp and the s&p 500 for the five years ended 12/31/09?        Similar Program subtract(arg1, const), divide(#0, const), subtract(arg1, const), divide(#2, const), subtract(#1, #3)        Similar Question what was the difference in percentage return of a o smith corp and the s&p 500 for the five years ended 12/31/08?        Similar Program subtract(arg1, const), divide(#0, const), subtract(arg1, const), divide(#2, const), subtract(#1, #3)        Similar Question what was the difference in percentage return of a o smith corp and the s&p 500 for the five years ended 12/31/07?        Similar Program subtract(arg1, const), divide(#0, const), subtract(arg1, const), divide(#2, const), subtract(#1, #3)        Similar Question what was the difference in percentage return of a o smith corp and the s&p 500 for the five years ended 12/31/06?        Similar Program subtract(arg1, const), divide(#0, const), subtract(arg1, const), divide(#2, const), subtract(#1, #3)        Similar Question what was the difference in percentage return of a o smith corp and the s&p 500 for the five years ended 12/31/05?        Similar Program subtract(arg1, const), divide(#0, const), subtract(arg1, const), divide(#2, const), subtract(#1, #3)",
        "divide(33.5, 2.5)",
        "add(1400, 5%), add(#0, 5%), add(#1, 5%)",
        "subtract(14.24, 17.95), divide(#0, 17.95)",
        "subtract(12, 23)",
        "add(7.66, 9.45), add(#0, 9.45), add(#1, 9.45)",
        "divide(47.0, 7.75%)",
        "add(74, 110), divide(#0, const_2)",
        "subtract(917491, 783031), divide(#0, 783031)",
        "divide(const_100, 40)",
        "subtract(711, 802), divide(#0, 802)",
        "subtract(1096, 44)",
        "add(7439, 242)",
        "subtract(8.00, 4.70)",
        "divide(849, 5424)",
        "divide(144, 1717)",
        "divide(const_100, 3)",
        "add(29, 32), add(#0, 13)",
        "divide(17944, 22885)",
        "add(2.86, 2.87)",
        "divide(13400, 101500)",
        "subtract(191, 1854), divide(#0, 1854)",
        "divide(4630, 51410)",
        "divide(18.1, 16.1)",
        "add(800, 192), divide(#0, 1500), multiply(#1, const_100)",
        "add(32, 38), divide(#0, const_2)",
        "subtract(22.366, 12.393), divide(#0, 12.393)",
        "divide(const_100, 20)",
        "subtract(5080, 9165), divide(#0, 9165), multiply(#1, const_100)",
        "subtract(1.7, 1.2), divide(#0, 1.2)",
        "multiply(4218065, 15.52)",
        "subtract(5051, 4904)",
        "subtract(314.36, 100.00), divide(#0, 100.00)",
        "table_max(derivatives, none)",
        "subtract(765, 664)",
        "add(76.0, 1.3)",
        "add(12, 4), add(#0, 4)",
        "divide(159, 1594)",
        "subtract(7.02, 1309)",
        "divide(574, 1407)",
        "add(47, 43), divide(#0, const_2)",
        "multiply(427195037, 108.11)",
        "subtract(459.8, 398.0), divide(#0, 398.0)",
        "subtract(19201, 23280)",
        "divide(1127.6, 2719.3)",
        "subtract(198.27, 100.00), divide(#0, 100.00)",
        "divide(6275, 5687)",
        "divide(130.66, 152.42)",
        "subtract(2.2, 1.2), divide(#0, 1.2)",
        "subtract(197, const_2), divide(#0, 227)",
        "add(19600, 13900)",
        "add(50, 33)",
        "divide(1451, 2500)",
        "subtract(44033, 47267), divide(#0, 47267)",
        "subtract(92, 83), divide(#0, 83)",
        "divide(8000, 25000)",
        "add(77, 90), add(#0, 64), divide(#1, const_2)",
        "divide(74896, 5587388)",
        "divide(45410, 179633)",
        "subtract(279, 280)",
        "divide(13536, 16594)",
        "table_max(net derivative liabilities under bilateral agreements, none)",
        "table_max(net derivative liabilities under bilateral agreements, none)",
        "subtract(2212, 18.5)",
        "divide(145, 586)",
        "subtract(4.3, 4.1)",
        "subtract(195237, 177947), divide(#0, 177947)",
        "divide(75, 77)",
        "divide(2963, 23556)",
        "subtract(233.86, 138.79), divide(#0, 138.79)",
        "multiply(987, 29%)",
        "divide(34, 3669)",
        "subtract(26.8% , 21.9%)",
        "subtract(911507, 938555)",
        "greater(162.45, 127.66)",
        "divide(82, 17)",
        "divide(29.4, 931.3)",
        "add(1005, 1005), add(#0, 1005)",
        "subtract(161.9, 344.6), divide(#0, 344.6)",
        "divide(6.2, 38.8)",
        "subtract(174335, 17984)",
        "subtract(43.81, 100.00), divide(#0, 100.00), subtract(100.00, 51.96), divide(#2, 51.96), subtract(#1, #3)",
        "divide(10000, 30000)",
        "divide(172.8, 23.6)",
        "divide(123, 1676)",
        "divide(342.9, 78.5)",
        "subtract(434814, 382739), divide(#0, 382739)",
        "divide(45826, 182650)",
        "divide(77.3, 74.9)",
        "subtract(178.8, 113.6), divide(#0, 113.6), subtract(100.0, 113.6), divide(#2, 113.6), subtract(#1, #3)",
        "subtract(56616, 2968), subtract(const_2, #0)",
        "add(23596, 63003), add(#0, 50131), add(#1, 11589), add(#2, 85), divide(#3, 85)",
        "divide(2408, 3772)",
        "subtract(182.87, 149.70), divide(#0, 149.70)",
        "subtract(10, 494)",
        "subtract(39.2, 28.2), divide(#0, 28.2)",
        "multiply(1461, 31.23)",
        "subtract(65.7, 14.7), divide(#0, 14.7)",
        "multiply(102400, 74.83)",
        "multiply(17.5, const_1000), multiply(#0, const_1000), subtract(#1, const_1000)",
        "divide(1160, 2575)",
        "subtract(248.36, 100.00), divide(#0, 100.00)",
        "subtract(156, 15), divide(#0, 15)",
        "subtract(525, 460), divide(#0, 525)",
        "divide(1700000, 900000)",
        "divide(691, 8369)",
        "divide(4.8, 221.9)",
        "divide(239.5, 802.6)",
        "add(8000, 8000)",
        "subtract(938555, 923225), divide(#0, 923225)",
        "divide(247, 1676)",
        "subtract(104, 87), divide(#0, 104)",
        "subtract(148.8, 134.8)",
        "subtract(711, 438), divide(#0, 438)",
        "divide(563220, 3063816)",
        "add(319, 88)",
        "divide(3.87, 84), multiply(#0, 2.92)",
        "divide(5.3, 17.7)",
        "subtract(31.16, 24.57)",
        "divide(104, 411636)",
        "subtract(22171, 22469), divide(#0, 22469)",
        "divide(500000, 6)",
        "divide(664, 824)",
        "subtract(272.59, 243.79), divide(#0, 243.79)",
        "subtract(6040, 15477)",
        "add(3.7, 3.0), add(#0, 2.1), divide(#1, 3)",
        "divide(390239, 777443)",
        "divide(799, 7.0)",
        "subtract(9.60, 13.25), divide(#0, 13.25)",
        "subtract(634.9, 735.4), divide(#0, 735.4)",
        "divide(500, 4612)",
        "greater(5, 6)",
        "divide(1217121, 1211143)",
        "divide(77724, 70842)",
        "subtract(3008, 3084)",
        "add(2.3, 4.6), add(#0, 9.2), divide(#1, const_2)",
        "divide(1.8, 5.6)",
        "add(5.3, 7.2), divide(#0, const_2)",
        "subtract(3538, 3480), divide(#0, 3480)",
        "multiply(3227753, 8.86)",
        "divide(100.3, 14.9)",
        "subtract(209, 191), divide(#0, 191)",
        "subtract(2.6, 2.2), divide(#0, 2.2)",
        "subtract(120905, 127938), divide(#0, 127938)",
        "subtract(666.9, 542.9), divide(#0, 542.9)",
        "divide(3515, 23556)",
        "multiply(205000, 160.20)",
        "divide(3112.0, 13440.0)",
        "subtract(70, 53)",
        "subtract(408164, 391555)",
        "subtract(148.8, 134.8), divide(#0, 134.8)",
        "table_average(liabilities, none)",
        "add(110, 74)",
        "divide(7.1, 380.2)",
        "divide(15900, 8600)",
        "subtract(2.90, 2.60), divide(#0, 2.60)",
        "divide(86.1, 64.5)",
        "divide(320, 271)",
        "add(1.6, 2.7), add(#0, 2.2)",
        "table_average(qualified defined benefit pension plans, none)",
        "subtract(1854, 2045), divide(#0, 2045)",
        "subtract(108.59, 63.00), divide(#0, 63.00)",
        "subtract(214.4, 126.6)",
        "subtract(27.1, 26.4), divide(#0, 26.4)",
        "subtract(6.3, 5.8)",
        "add(74360, 46961)",
        "divide(63.84, 93.20)",
        "multiply(90000, 149.28)",
        "divide(2.7, 14.4)",
        "divide(165, 6816)",
        "divide(451.7, 900.0)",
        "subtract(1279337, 1019953), divide(#0, 1019953)",
        "multiply(113, const_1000), divide(#0, 100)",
        "add(7.5, 33%)",
        "divide(22500, 113300)",
        "table_average(const_6, none)",
        "subtract(35.1, 32.8), divide(#0, 32.8)",
        "divide(43319, 96606)",
        "divide(109.8, 2616618)",
        "subtract(198.05, 146.97), divide(#0, 146.97)",
        "divide(4.25, 3.71), subtract(#0, const_1)",
        "subtract(63003, 50131)",
        "table_average(net sales, none)",
        "subtract(222510, 200077), divide(#0, 200077)",
        "subtract(121.46, 100.00), divide(#0, 100.00)",
        "subtract(2.60, 2.55), divide(#0, 2.55)",
        "divide(635, 1000)",
        "subtract(306222, 278395), divide(#0, 278395)",
        "greater(76, 63)",
        "greater(4096, 891)",
        "add(7729, 5400), add(#0, 5038), add(#1, const_2), divide(#2, const_2)",
        "greater(291, 180)",
        "add(358, 355), add(#0, 360)",
        "subtract(24296, 29002), divide(#0, 29002)",
        "subtract(32.9, 35.0)",
        "subtract(36.3%, 35.0%)",
        "divide(24, 15), subtract(#0, const_1)",
        "subtract(5829, 5735), divide(#0, 5735)",
        "subtract(35066, 27885), divide(#0, 35066)",
        "divide(8.0, 13.4)",
        "add(1597, 816)",
        "subtract(23778, 21376), subtract(#0, 21376)",
        "subtract(1341016, 1270173)",
        "divide(34, 66.3)",
        "subtract(119, 86), divide(#0, 86)",
        "subtract(286.22, 228.97), divide(#0, 228.97)",
        "subtract(17.3, 16.8), divide(#0, 16.8)",
        "subtract(128.16, 80.74), divide(#0, 80.74)",
        "multiply(15%, 2467.1)",
        "multiply(258.6, const_1000)",
        "divide(1733, 2655)",
        "subtract(8538.6, 8554.5)",
        "divide(59656, 61368)",
        "subtract(22469, 22956), divide(#0, 22956)",
        "divide(6900, 220600)",
        "add(150, 175)",
        "subtract(47267, 44033), divide(#0, 44033)",
        "divide(4, 158)",
        "divide(708, 736)",
        "divide(531.8, 1020.1)",
        "add(3.2, 9.2), add(#0, 6.5), divide(#1, const_2)",
        "subtract(217.56, 78.53), divide(#0, 78.53)",
        "divide(1819, 22258)",
        "multiply(760000, const_1000)",
        "subtract(1.4, 1.5), divide(#0, 1.5)",
        "divide(27, 5014), add(#0, const_100)",
        "subtract(68, 74)",
        "divide(10000, 30000)",
        "subtract(83, 78), divide(#0, 78)",
        "subtract(37.79, 26.22), divide(#0, 26.22)",
        "add(587, 580)",
        "subtract(99, 89), divide(89, #0)",
        "divide(0.4, 772)",
        "subtract(240.9, 2.6), divide(#0, 2.6)",
        "subtract(45.3, 48.1)",
        "",
        "subtract(313.45, const_100), divide(#0, const_100), subtract(216.54, const_100), divide(#2, const_100), subtract(#1, #3)         Possible Programs subtract(arg1, const), divide(#0, const), subtract(arg1, const), divide(#2, const), subtract(#1, #3)",
        "divide(772, 3693)",
        "divide(47162, 83659)",
        "divide(684, 7001)",
        "subtract(169, 138), divide(#0, 138)",
        "divide(165.7, 802.6)",
        "subtract(78467, 75716)",
        "divide(59, 367)",
        "add(294, 30), add(#0, 2)",
        "subtract(4566, 3846), divide(#0, 3846)",
        "divide(581, 469)",
        "divide(1300000, 61)",
        "subtract(762, 518), divide(#0, 518)",
        "add(515.2, 250)",
        "multiply(12300, const_1000), divide(#0, const_2)",
        "subtract(22176, 27885), divide(#0, 27885)",
        "subtract(158578, 118314)",
        "subtract(117.61, 100.00), divide(#0, 100.00)",
        "divide(32800, 113300)",
        "subtract(33.1, 22.7), divide(#0, 33.1)",
        "divide(17.2, 47.9)",
        "divide(613, 1178)",
        "divide(46984, 172095)",
        "subtract(5301, 4229), divide(#0, 4229)",
        "subtract(109669, 112824), divide(#0, 112824)",
        "subtract(1171, 1701)",
        "subtract(17057.4, 16772.9), divide(#0, 16772.9)",
        "divide(2070, 13430)",
        "add(34, 23), add(#0, 13)",
        "multiply(465, const_1000), divide(#0, 7170)",
        "divide(476, 1.079)",
        "divide(849, 5424)",
        "subtract(33.93, 24.98), divide(#0, 24.98)",
        "subtract(1334, 1434)",
        "subtract(11.24, 10.79), divide(#0, 10.79)",
        "table_average(rental expense, none)",
        "divide(19733, 213520)",
        "table_average(net unrealized investment gains, none)",
        "divide(110000, 65000)",
        "add(60.15, 41.30), divide(#0, const_2)",
        "add(56616, 217692), add(#0, 145095), divide(#1, const_3)",
        "divide(932, 0.44)",
        "divide(427195037, 153)",
        "subtract(9.09, 5.15), divide(#0, 5.15)",
        "subtract(205, 100)",
        "divide(1962822, 4333146)",
        "divide(3321, 8124)",
        "divide(121.0, 268.4)",
        "divide(12.0, 61592)",
        "subtract(16.9, 14.9), divide(#0, 14.9)",
        "divide(3329, 1246)",
        "subtract(107061, 86080)",
        "divide(24.0, 2.2)",
        "divide(2690, 28383)",
        "subtract(4566, 3846), divide(#0, 3846)",
        "divide(const_100, 5)",
        "table_sum(asphalt, none)",
        "multiply(633, 27%)",
        "subtract(48.56, 41.39), divide(#0, 41.39)",
        "subtract(5.27, 4.77)",
        "multiply(2975, const_1000)",
        "subtract(107551, 28114), subtract(#0, 28114)",
        "subtract(28524, 4934)",
        "add(149768, 600000)",
        "subtract(336.5, 368.6)",
        "table_average(balance at december 31, none)",
        "subtract(875, 30), divide(#0, 30)",
        "multiply(540.8, const_1000), divide(#0, const_1000000)",
        "divide(32339, 23)",
        "divide(4229, 7857)",
        "divide(265436, 798018)",
        "divide(156, 450)",
        "multiply(200, 100%), multiply(#0, 0.10)",
        "subtract(200, 190)",
        "divide(14.6, 21)",
        "subtract(75, 77), divide(#0, 77)",
        "divide(4819, 5419)",
        "divide(43.9, const_1000)        Possible Answer 0.044",
        "subtract(711, 527), divide(#0, 527)",
        "divide(3152, 4612)",
        "subtract(318.5, 634.9), divide(#0, 634.9)",
        "subtract(37.2, 31.9), divide(#0, 31.9)",
        "subtract(86069, 88215), divide(#0, 88215)",
        "divide(2755, 14773)",
        "multiply(1211143, 308.10), divide(#0, const_1000)",
        "add(32.5, 23.8)",
        "subtract(8.7, 9.6), divide(#0, 8.7)",
        "subtract(32, 38), divide(#0, 38)",
        "multiply(4999, 50.33)",
        "subtract(9.0, 40.4)",
        "add(1899, 2546), add(#0, 2786)",
        "add(587, 580)",
        "divide(91.74, 63.45), divide(#0, 63.45)",
        "divide(3465, 10527)",
        "add(5%, 3%)",
        "divide(619, 10527)",
        "subtract(57, 41), divide(#0, 41)",
        "subtract(151, 136), divide(#0, 136)",
        "divide(166, 1782)",
        "",
        "divide(511.7, 798.3)",
        "subtract(323.7, 335.9), divide(#0, 335.9)",
        "subtract(5058, 4523), divide(#0, 4523)",
        "subtract(7167.1, 6383.0), divide(#0, 6383.0)",
        "subtract(8.25, 4.50)",
        "divide(51410, 3.25%)",
        "divide(35.9, 426.6)",
        "multiply(619314, 74.25)",
        "divide(8959, 8717)",
        "divide(214.8, 450.1)",
        "subtract(328.4, 339.9), divide(#0, 339.9)",
        "subtract(20963, 12389)",
        "add(1219, 2), add(#0, 1224), divide(#1, const_2)",
        "divide(14, 169)",
        "multiply(6474102, 9.10), divide(#0, const_1000000)",
        "divide(75970, 777443)",
        "table_min(effective tax rate, none)",
        "subtract(2912456, 2728290), divide(#0, 2728290)",
        "add(217692, 145095), add(309183, #0), divide(#1, const_3)",
        "table_average(settlements, none)",
        "subtract(1.0, 8.8), divide(#0, 8.8)",
        "divide(12.9, 705.4)",
        "divide(5978, 1217121)",
        "divide(817388, 2030900)",
        "multiply(1084, 108.51)",
        "subtract(8630.9, 7630.0), divide(#0, 7630.0)",
        "subtract(4904, 5051), divide(#0, 5051)",
        "add(8304, 8717), add(#0, 8959)",
        "add(0.2, 9.4), add(#0, 0.6)",
        "subtract(1840, 1730), divide(#0, 1730)",
        "multiply(1.11, 64.8)",
        "divide(16100, 32800)",
        "divide(750.0, 420.5)",
        "subtract(28114, 31947)",
        "subtract(63, 66), divide(#0, const_2), subtract(#1, const_2)",
        "subtract(313.45, 100.00), divide(#0, 100.00)",
        "subtract(3.09, 3.20), divide(#0, 3.20)",
        "add(1364, 3772)",
        "subtract(750, 200)",
        "subtract(43.81, 100.00), divide(#0, 100.00)",
        "divide(43510, 93543)",
        "divide(105, 289)",
        "subtract(236, 3057), divide(#0, 3057)",
        "table_average(expected volatility, none)",
        "divide(6, 7)",
        "subtract(214, 100), divide(#0, 100)",
        "divide(223.82, 195.02)",
        "multiply(375, 5.0%)",
        "subtract(8.8, 4.4)",
        "subtract(203.87, 100.00)",
        "divide(27318, 51596)",
        "table_max(tier 1 capital, none)",
        "divide(861, 9379)",
        "subtract(92.49, 55.78), divide(#0, 55.78)",
        "subtract(1135, 1016), divide(#0, 1016)",
        "divide(2.0, 5.8)",
        "subtract(1830, 1909), divide(#0, 1909)",
        "divide(210, 132)",
        "divide(4250, 9241)",
        "subtract(10, 12)",
        "subtract(311.81, 100.00), divide(100.00, 100.00), multiply(#1, #0)         Possible Programs subtract(311.81, 100.00), divide(100.00, 100.00), multiply(#1, #0)",
        "multiply(766801, 40.85), divide(#0, const_1000000)",
        "divide(318063, const_1000), divide(#0, const_1000), divide(#1, const_1000)",
        "divide(26053, 32070)",
        "subtract(85.05, 70.18)",
        "divide(2435, 9475)",
        "subtract(2.6, 1.4), divide(#0, 1.4)",
        "divide(2902, 14773)",
        "divide(8368, 16075)",
        "subtract(214, 100), divide(#0, 100), subtract(163, 100), divide(#2, 100), subtract(#1, #3)         Answer subtract(214, 100), divide(#0, 100), subtract(163, 100), divide(#2, 100), subtract(#1, #3)         Table [['', '2008', '2009', '2010', '2011', '2012', '2013'], ['intel corporation', '$ 100', '$ 148', '$ 157', '$ 191', '$ 163', '$ 214'], ['dow jones u.s . technology index', '$ 100', '$ 170', '$ 191', '$ 191', '$ 209', '$ 270'], ['s&p 500 index', '$ 100', '$ 132', '$ 151', '$ 154', '$ 175', '$ 236']]        Possible Operations ['add', 'subtract', 'multiply', 'divide', 'exp', 'greater', 'table_sum', 'table_average', 'table_max', 'table_min']    Possible Arguments ['100', '163', '191', '132', '151', '175', '2009', '148', '2012', '214', '270', '154', '170', 's&p 500 index', 'dow jones u.s . technology index', '2010', '2011', '2013', 'intel corporation', '236', '500', '28', '157', '2008', '209', '170', '1000', '1000000', '10000000', '1000000000', '10000', '100000', '1000000', '10000000', '1000000', '100000', '1000000', '10000000000', '1000', 'const_2', 'const_1', 'const_3', 'const_4', 'const_5', 'const_6', 'const_7', 'const_8', 'const_9', 'const_10', 'const_m1', '#0', '#1', '#2', '#3', '#4', '#5', '#6', '#7', '#8', '#9', '#10', 'none'] ['const_200', 'const_201', 'const_202', 'const_203', 'const_204', 'const_205', 'const_206', 'const_207', 'const_208', 'const_209', 'const_210', 'const_211', 'const_212', 'const_213', 'const_214', 'const_215', 'const_216', 'const_217', 'const_218', 'const_219', 'const_220', 'const_221', 'const_222', 'const_223', 'const_224', 'const_225', 'const_226', 'const_227', 'const_228', 'const_229', 'const_230', 'const_231', 'const_232', 'const_233', 'const_234', 'const_235', 'const_236', 'const_237', 'const_238', 'const_239', 'const_240', 'const_241', 'const_242', 'const_243', 'const_244', 'const_245', 'const_246', 'const_247', 'const_248', 'const_249', 'const_250', 'const_251', 'const_252', 'const_253', 'const_254', 'const_255', 'const_256', 'const_257', 'const_258', 'const_259', 'const_260', 'const_261', 'const_262', 'const_263', 'const_264', 'const_265', 'const_266', 'const_267', 'const_268', 'const_269', 'const_270', 'const_271', 'const_272', 'const_273', 'const_274', 'const_275', 'const_276', 'const_277', 'const_278', 'const_279', 'const_280', 'const_281', 'const_282', 'const_283', 'const_284', 'const_285', 'const_286', 'const_287', 'const_288', 'const_289', 'const_290', 'const_291', 'const_292', 'const_293', 'const_294', 'const_295', 'const_296', 'const_297', 'const_298', 'const_299', 'const_300', 'const_301', 'const_302', 'const_303', 'const_304', 'const_305', 'const_306', 'const_307', 'const_308', 'const_309', 'const_310', 'const_311', 'const_312', 'const_313', 'const_314', 'const_315', 'const_316', 'const_317', 'const_318', 'const_319', 'const_320', 'const_321', 'const_322', 'const_323', 'const_324', 'const_325', 'const_326', 'const_327', 'const_328', 'const_329', 'const_330', 'const_331', 'const_332', 'const_333', 'const_334', 'const_335', 'const_336', 'const_337', 'const_338', 'const_339', 'const_340', 'const_341', 'const_342', 'const_343', 'const_344', 'const_345', 'const_346', 'const_347', 'const_348', 'const_349', 'const_350', 'const_351', 'const_352', 'const_353', 'const_354', 'const_355', 'const_356', 'const_357', 'const_358', 'const_359', 'const_360', 'const_361', 'const_362', 'const_363', 'const_364', 'const_365', 'const_366', 'const_367', 'const_368', 'const_369', 'const_370', 'const_371', 'const_372', 'const_373', 'const_374', 'const_375', 'const_376', 'const_377', 'const_378', 'const_379', 'const_380', 'const_381', 'const_382', 'const_383', 'const_384', 'const_385', 'const_386', 'const_387', 'const_388', 'const_389', 'const_390', 'const_391', 'const_392', 'const_393', 'const_394', 'const_395', 'const_396', 'const_397', 'const_398', 'const_399', 'const_400', 'const_401', 'const_402', 'const_403', 'const_404', 'const_405', 'const_406', 'const_407', 'const_408', 'const_409', 'const_410', 'const_411', 'const_412', 'const_413', 'const_414', 'const_415', 'const_416', 'const_417', 'const_418', 'const_419', 'const_420', 'const_421', 'const_422', 'const_423', 'const_424', 'const_425', 'const_426', 'const_427', 'const_428', 'const_429', 'const_430', 'const_431', 'const_432', 'const_433', 'const_434', 'const_435', 'const_436', 'const_437', 'const_438', 'const_439', 'const_440', 'const_441', 'const_442', 'const_443', 'const_444', 'const_445', 'const_446', 'const_447', 'const_448', 'const_449', 'const_450', 'const_451', 'const_452', 'const_453', 'const_454', 'const_455', 'const_456', 'const_457', 'const_458', 'const_459', 'const_460', 'const_461', 'const_462', 'const_463', 'const_464', 'const_465', 'const_466', 'const_467', 'const_468', 'const_469', 'const_470', 'const_471', 'const_472', 'const_473', 'const_474', 'const_475', 'const_476', 'const_477', 'const_478', 'const_479', 'const_480', 'const_481', 'const_482', 'const_483', 'const_484', 'const_485', 'const_486', 'const_487', 'const_488', 'const_489', 'const_490', 'const_491', 'const_492', 'const_493', 'const_494', 'const_495', 'const_496', 'const_497', 'const_49",
        "multiply(375, 6.00%)",
        "divide(1900, 31300)",
        "divide(370.32, 208.14)",
        "divide(43634, 95112)",
        "divide(144, 1927)",
        "subtract(150, 85), divide(#0, 150)",
        "subtract(5.8, 6.3)",
        "add(1135, 1016), divide(1135, #0)",
        "subtract(49447, 367)",
        "divide(3543016, 253907)",
        "divide(131.8, 148.8)",
        "multiply(182, const_1000)",
        "divide(3538, 50962)",
        "multiply(170.6, const_1000), multiply(170.6, const_1000), subtract(#0, #1)",
        "subtract(119, 86)",
        "subtract(63, 134)",
        "subtract(18.1, 14.6), divide(#0, 14.6)",
        "divide(38, 129)",
        "add(136, 132), subtract(#0, 137)",
        "divide(1432, 875)",
        "add(127.1, 70.4)",
        "divide(856240, 911507)",
        "subtract(5829, 5735), divide(187, #0)",
        "greater(538, 503)",
        "divide(1334, 23556)",
        "table_average(net sales, none)",
        "subtract(5829, 154)",
        "",
        "divide(28663, 233584)",
        "add(98.7, 121600), add(#0, 114400)",
        "subtract(243.7, 247.9), divide(#0, 247.9)",
        "subtract(7630.0, 6710.4), divide(#0, 6710.4)",
        "divide(1014, 5993)",
        "subtract(16.8, 17.7), divide(#0, 17.7)",
        "add(1594, 1719), add(1717, #0), add(1927, #1), add(#2, const_4), add(#3, const_1000)",
        "subtract(12389, 496), divide(#0, 496)",
        "add(5145, 34526)",
        "subtract(534648, 419651), divide(#0, 419651)",
        "subtract(6.49, 4.36)",
        "divide(121417, 93200)",
        "add(31.9, 14.5), divide(46.4, #0)",
        "subtract(232091, 159333), divide(#0, 159333), multiply(#1, const_100)",
        "multiply(5400, 45%)",
        "divide(250, 2129)",
        "add(12.9, 19.4), add(#0, 4.7)",
        "greater(162.82, 165.75)",
        "greater(370.32, 208.14)",
        "subtract(30, 17), divide(#0, 30)",
        "divide(30, 107061)",
        "table_min(alternative investments, none)",
        "add(81, 120), divide(#0, const_2)",
        "divide(36.5, 7.7)",
        "add(2.89, 2.89), add(#0, 2.89), divide(#1, const_2)",
        "multiply(4.40, 612.5)",
        "divide(964, 4218)",
        "divide(4278, 138930)",
        "subtract(55509, 11589), divide(#0, 11589)",
        "greater(294.82, 184.64)",
        "",
        "divide(172099, 69.80)",
        "divide(3189, 500)",
        "divide(2793, 62.2)",
        "divide(14.9, 546.5)",
        "divide(191, 191)",
        "divide(411.1, 802.6)",
        "divide(587, 2859)",
        "multiply(776, const_3), multiply(#0, const_1000), subtract(#1, const_1000), divide(#2, const_2)",
        "subtract(798, 873), divide(#0, 873)",
        "subtract(531.6, 546.5)",
        "subtract(107551, 28114)",
        "subtract(703.1, 705.4), divide(#0, 705.4)",
        "subtract(426.6, 380.2)",
        "subtract(8368, 7874)",
        "divide(10000000, 110000000)",
        "divide(105, 190)",
        "subtract(47.6, 37.3), divide(#0, 37.3)",
        "subtract(98.05, 95.11), divide(#0, 95.11)",
        "subtract(378.5, 412.6)",
        "subtract(3.79, 3.68)",
        "subtract(216, 205), divide(#0, 205)",
        "multiply(79, 43)",
        "subtract(2.50, 2.36), divide(#0, 2.36)",
        "greater(527, 711)",
        "divide(199, 2655)",
        "multiply(2943694, 22.08), divide(#0, const_100)",
        "divide(1279, 22885)",
        "subtract(1925, 1131), divide(#0, 1131)",
        "divide(72%, 28)",
        "subtract(121.46, const_100), divide(#0, const_100), subtract(127.07, const_100), divide(#2, const_100), subtract(#1, #3)         Possible Programs subtract(121.46, const_100), divide(#0, const_100), subtract(127.07, const_100), divide(#2, const_100), subtract(#1, #3)",
        "divide(16.5, 9.6)",
        "subtract(16.9, 14.9)",
        "subtract(705.4, 696.3)",
        "subtract(13.1, 13.0)",
        "add(24.0, 28.8), add(#0, 41.7), add(#1, 9.60), add(#2, 21.43), add(#3, const_2), divide(#4, const_2)",
        "add(10543, 83)",
        "subtract(236.20, 100.00)",
        "multiply(12.1, const_1000), multiply(19.0, const_1000), subtract(#0, #1), divide(#2, #1)",
        "add(184.07, 174.62), divide(#0, const_2)",
        "subtract(1770, 1702)",
        "add(265, 172)",
        "subtract(1925, 1131), divide(#0, 1131)",
        "add(3629455, 1708928), divide(3629455, #0)",
        "",
        "add(75, 77), add(#0, 93), divide(#1, const_3)",
        "subtract(148.9, 127.1), divide(#0, 127.1)",
        "subtract(243.7, 247.9)",
        "subtract(148.9, 166.8), divide(#0, 166.8)",
        "add(703.1, 18.2)",
        "subtract(139549, 201808)",
        "multiply(12896599, 73.87)",
        "add(217692, 14399), add(14399, 232091), add(#0, #1)",
        "divide(54, 75)",
        "subtract(77, 55), divide(#0, 55)",
        "divide(304, 1407)",
        "divide(890, 4932)",
        "divide(205500, 8800)",
        "table_average(protect crack spread values, none)",
        "subtract(88, 79), subtract(88, #0)",
        "divide(83539, 488935)",
        "divide(987, 205)",
        "multiply(6569200, 4.55), divide(#0, const_1000)",
        "divide(1451, 2500)",
        "divide(837, 5873)",
        "add(127.1, 70.4)",
        "multiply(2007, 231.1), multiply(2006, 203.4), multiply(2005, 221.1), divide(#0, #1)",
        "greater(3.6, 1917)",
        "divide(13440.0, const_1000), multiply(#0, 1000)",
        "subtract(98.05, 95.11), divide(#0, 95.11)",
        "divide(26363, 59677)",
        "subtract(198.18, 100.00), divide(100.00, 100.00), multiply(#1, #0)",
        "multiply(1125734, 10.91)",
        "subtract(318.46, 138.48), divide(#0, 138.48)",
        "divide(2590898, 2943694)",
        "divide(7874, 16044)",
        "divide(2073, 13208)",
        "divide(3543016, 253907)",
        "divide(129, 708)",
        "subtract(931.3, 973.7)",
        "divide(26064, 32084)",
        "subtract(63884, 99264), divide(#0, 99264)",
        "divide(16568, 24859)",
        "divide(15.2, 4.4)",
        "divide(30, 169)",
        "divide(153644, 2330532)",
        "divide(2.7, 30.1)",
        "table_max(collateral posted, none)",
        "subtract(153.24, 100.00), divide(#0, 100.00)",
        "divide(313.45, 216.54)",
        "add(180993, 27229)",
        "divide(1423, 59677)",
        "divide(41.9, 121.0)",
        "divide(850.0, 650.0)",
        "subtract(1410.5, 1229.0), divide(#0, 1229.0)",
        "divide(60, 298)",
        "subtract(33.9, 32.9)",
        "subtract(190, 135), divide(#0, 135)",
        "subtract(558368, 506032), divide(#0, 506032)",
        "subtract(145.51, 100.00), divide(#0, 100.00)",
        "subtract(4277, 4425), divide(#0, 4425)",
        "subtract(426932, 341003), divide(#0, 341003)",
        "divide(156, 15)",
        "add(469, 729), add(#0, 581)",
        "subtract(24.98, 15.32), divide(#0, 15.32)",
        "divide(12806, 22258)",
        "subtract(160.62, 100.00), divide(#0, 100.00)",
        "add(10.6, 11), add(11.2, 11.6), add(11.9, 12.1), add(12.2, 12.5), add(12.8, 13.1)",
        "add(78, 119), add(#0, 86)",
        "subtract(419, 301)",
        "add(61.1, 16.6), add(#0, -6.3), add(#1, -61.1)",
        "subtract(270.4, 267.8), divide(#0, 267.8)",
        "subtract(1.24, 0.78), divide(#0, 0.78)",
        "divide(72, 160)",
        "add(54, 45), divide(#0, 0.7), multiply(#1, const_1000)",
        "divide(48, 7.0)",
        "subtract(2.6, 2.6)",
        "subtract(26.3, 28.4), divide(#0, 28.4)",
        "subtract(345777, 17.5)",
        "divide(997, 10000000)",
        "subtract(384102, 121417)",
        "subtract(322.60, 100.00), subtract(100.00, const_100), divide(#0, #1)",
        "",
        "subtract(558368, 506032), divide(#0, 506032)",
        "add(329500, 6)",
        "divide(1088, 4944)",
        "divide(8.6, 10)",
        "divide(3474, 20397)",
        "divide(47.9, 56.0)",
        "divide(102.083, 102.083)",
        "divide(1364, 3772)",
        "subtract(50, 60)",
        "subtract(211.5, 168.4), divide(#0, 168.4)",
        "subtract(377677, 388669), divide(#0, 388669)",
        "subtract(1487, 875)",
        "subtract(5.02, 3.72), divide(#0, 3.72)",
        "subtract(6608, 6770), divide(#0, 6770)",
        "subtract(59677, 17177)",
        "divide(957.4, 1410.5)",
        "subtract(214.4, 126.6)",
        "subtract(16, 73), divide(#0, 73)",
        "add(322.4, 326.5), add(328.4, #0), add(#1, const_2), divide(#2, const_2)",
        "subtract(240.29, 100.00)",
        "subtract(9.3, 8.4), divide(#0, 8.4)",
        "subtract(559.7, 627.6), divide(#0, 627.6)",
        "subtract(326.5, 328.4)",
        "subtract(509, 707), divide(#0, 707)",
        "subtract(7.2, 1.2)",
        "subtract(18178, 24296), divide(#0, 24296)",
        "divide(90, 291)",
        "multiply(150, 23.44)",
        "subtract(64350, 40000), divide(#0, 40000)",
        "divide(177, 2262)",
        "subtract(143.69, 100.00), divide(#0, 100.00)",
        "subtract(534648, 419651), divide(#0, 419651)",
        "divide(151, 291)",
        "subtract(84, 75), divide(#0, 75)",
        "divide(4819, 5419)",
        "divide(const_1000000, const_1000000000)",
        "divide(2440, 19941)",
        "subtract(168, 224), divide(#0, 224)",
        "subtract(136, 133), divide(#0, 133)",
        "divide(248107, 4915507)",
        "subtract(137, 133), divide(#0, 133)",
        "divide(4489, 22560)",
        "subtract(10, 4), divide(#0, 4)",
        "divide(40859, 29808)",
        "subtract(137, 133), divide(#0, 133)",
        "subtract(265436, 188649)",
        "divide(159, 898)",
        "subtract(75, 107), divide(#0, 107)",
        "add(177, 148), add(#0, 124)",
        "subtract(18171, 17282)",
        "divide(592, 992)",
        "divide(155, 898)",
        "subtract(354, 558)",
        "subtract(752707, 593356), divide(#0, 593356)",
        "subtract(2.92, 2.56), divide(#0, 2.92)",
        "subtract(14, const_100)",
        "add(131, 133), add(120, 125), divide(#0, 1203)",
        "add(1277, 466), add(#0, 472)",
        "multiply(1482914, 110.17), multiply(#0, 109.32), subtract(#1, #2)",
        "subtract(3.87, 2.56), divide(#0, 2.56)",
        "subtract(964, 758), divide(#0, 758)",
        "multiply(1708928, 113.49)",
        "subtract(10, 4)",
        "subtract(177, 148)",
        "subtract(487, 234)",
        "divide(3081, 2016)",
        "divide(373, 4545)",
        "divide(2094800, 6156900)",
        "add(1.3, 1.3), add(#0, 1.3)",
        "add(5822, 474)",
        "divide(473, 7170)",
        "divide(4000, 88000)",
        "subtract(153.55, 100.00), divide(#0, 100.00)",
        "subtract(8.2, 2.0), divide(#0, 2.0)",
        "subtract(106.37, 75.55), divide(#0, 75.55)",
        "divide(4074, 20397)",
        "subtract(348, 301), divide(#0, 301)",
        "subtract(4535, 4180), divide(#0, 4180)",
        "add(216, 216), add(#0, 225)",
        "divide(5687, 6275)",
        "subtract(56, 34)",
        "subtract(165172, 182465), divide(#0, 182465)",
        "subtract(99, 110)",
        "add(1133106, 1205260), add(725450, 875000), add(1106042, 89.92), add(1133106, 84.65), add(15936694, 89.66), add(1106042, 16811694), add(1133106, 17917736), add(89.66, 89.92), add(15936694, 2500596), add(1106042, 3063816), add(1133106, 3063816), add(15936694, 16811694), add(89.66, 1106042), add(15936694, 15936694), add(1133106, 1106042), add(1133106, 1106042), add(89.66, 15936694), add(1106042, 16811694), add(15936694, 1106042), add(1133106, 1133106), add(89.66, 1133106), add(1106042, 1106042), add(15936694, 15936694), add(1133106, 1133106), add(15936694, 15936694), add(1106042, 1106042), add(1106042, 1106042), add(15936694, 15936694), add(1133106, 1133106), add(1106042, 1106042), add(15936694, 15936694), add(1133106, 1133106), add(89.66, 1133106), add(1106042, 16811694), add(15936694, 1133106), add(1133106, 1106042), add(1133106, 1106042), add(15936694, 1106042), add(1106042, 15936694), add(1133106, 1133106), add(89.66, 1133106), add(1106042, 1106042), add(15936694, 15936694), add(1133106, 1106042), add(1133106, 1106042), add(15936694, 15936694), add(1106042, 1106042), add(1106042, 1106042), add(15936694, 15936694), add(1133106, 1133106), add(89.66, 1133106), add(1106042, 16811694), add(15936694, 1133106), add(1133106, 1106042), add(1133106, 1106042), add(15936694, 1106042), add(1106042, 1106042), add(15936694, 15936694), add(1133106, 1133106), add(1106042, 1106042), add(15936694, 15936694), add(1133106, 1133106), add(89.66, 1133106), add(1106042, 16811694), add(15936694, 1133106), add(1133106, 1106042), add(1133106, 1106042), add(15936694, 1106042), add(1106042, 1106042), add(15936694, 15936694), add(1133106, 1133106), add(1106042, 1106042), add(15936694, 15936694), add(1133106, 1133106), add(1106042, 16811694), add(15936694, 1133106), add(1133106, 1106042), add(1133106, 1106042), add(15936694, 1106042), add(1106042, 1106042), add(15936694, 15936694), add(1133106, 1133106), add(1106042, 1106042), add(15936694, 15936694), add(1133106, 1133106), add(89.66, 1133106), add(1106042, 16811694), add(15936694, 1133106), add(1133106, 1106042), add(1133106, 1106042), add(15936694, 1106042), add(1106042, 1106042), add(15936694, 15936694), add(1133106, 1133106), add(1106042, 1106042), add(15936694, 15936694), add(1133106, 1133106), add(89.66, 1133106), add(1106042, 16811694), add(15936694, 1133106), add(1133106, 1106042), add(1133106, 1106042), add(15936694, 1106042), add(1106042, 1106042), add(15936694, 15936694), add(1133106, 1133106), add(1106042, 1106042), add(15936694, 15936694), add(1133106, 1133106), add(89.66, 1133106), add(1106042, 16811694), add(15936694, 1133106), add(1133106, 1106042), add(1133106, 1106042), add(15936694, 1106042), add(1106042, 1106042), add(15936694, 15936694), add(1133106, 1133106), add(1106042, 1106042), add(15936694, 15936694), add(1133106, 1133106), add(89.66, 1133106), add(1106042, 16811694), add(15936694, 1133106), add(1133106, 1106042), add(1133106, 1106042), add(15936694, 1106042), add(1106042, 1106042), add(15936694, 15936694), add(1133106, 1133106), add(1106042, 1106042), add(15936694, 15936694), add(1133106, 1133106), add(89.66, 1133106), add(1106042, 16811694), add(15936694, 1133106), add(1133106, 1106042), add(1133106, 1106042), add(15936694, 1106042), add(1106042, 1106042), add(15936694, 15936694), add(1133106, 1133106), add(1106042",
        "divide(304, 574), subtract(#0, const_1)",
        "subtract(516, 234)",
        "divide(23, 3165)",
        "subtract(8.75, 6.91), divide(#0, 6.91)",
        "divide(692, 3165)",
        "divide(61535, 54533)",
        "multiply(50, 2)",
        "divide(27318, 51596)",
        "add(211.5, 168.4), add(#0, 148.5)",
        "subtract(1415, 699), divide(#0, 699)",
        "divide(1371, 5419)",
        "divide(27301, 52667)",
        "divide(718.2, 787.5)",
        "subtract(99, 110), divide(#0, 110)",
        "subtract(17282, 16058)",
        "subtract(348, 259), divide(#0, 259)",
        "subtract(122, 56)",
        "divide(136462, 1184594)",
        "divide(2321, 5993)",
        "divide(2549621, 6609866)",
        "divide(5312, 24166)",
        "subtract(262, 472)",
        "subtract(1171, 111)",
        "subtract(6.91, 8.05), divide(#0, 8.05)",
        "subtract(3474, 3664)",
        "add(750, 750), add(1000, 1000), add(700, 700), add(1000, 1000), add(750, 750), add(746, 746), add(697, 697), add(750, 750), add(700, 700), add(856, 856), add(1.375, 1.375), add(1195, 1195), add(801, 801), add(853, 853), add(1.375, 1.375), add(856, 856), add(1.375, 1.375), add(801, 801), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(853, 853), add(",
        "subtract(5070, 4535), divide(#0, 4535)",
        "add(5583333, 5583333)",
        "divide(3698, 7034)",
        "divide(2329, 2473)",
        "multiply(89.92, 1106042), multiply(92.59, 875000), subtract(#0, #1)",
        "divide(448.6, 793.3)",
        "divide(135, 1136)",
        "subtract(1917, 699), divide(#0, 699)",
        "subtract(127.66, 100), divide(#0, 100)",
        "divide(2975, 24166)",
        "add(8, 3), add(#0, 3), divide(#1, const_2)",
        "divide(3671500, 132038)",
        "add(1.5, 1.4), add(1.4, #0)"
    ],
    "gold": [
        "subtract(5829, 5735)",
        "divide(8.1, 56.0)",
        "subtract(153.7, 139.9), divide(#0, 139.9)",
        "divide(121.4, 4187.8)",
        "subtract(318.46, const_100), divide(#0, const_100), subtract(206.49, const_100), divide(#2, const_100), subtract(#1, #3)",
        "subtract(92710000, 86842000), divide(#0, 86842000)",
        "divide(463, 4612)",
        "divide(301, 2575)",
        "greater(286.61, 198.09)",
        "subtract(1136, 1171)",
        "subtract(4711, 4926), divide(#0, 4926)",
        "divide(817388, 3644331)",
        "divide(137.4, 559.3)",
        "greater(281.09, 286.22)",
        "subtract(6348, 6241), divide(#0, 6241)",
        "table_average(net change for the year, none)",
        "divide(455, const_7)",
        "add(703.1, 705.4), add(#0, const_2), divide(#1, const_2)",
        "divide(139549, const_1000), divide(15.3, #0)",
        "add(25.0, 24.0), add(9.7, 10.2), add(#1, #0)",
        "subtract(772, 843), divide(#0, 843)",
        "subtract(198.18, const_100), divide(#0, const_100), subtract(311.81, const_100), divide(#2, const_100), subtract(#3, #1)",
        "subtract(101.88, 93.21), divide(#0, 93.21)",
        "divide(230, 13208)",
        "divide(26900, 16900)",
        "divide(219000, 83000)",
        "divide(6.3, 18.1)",
        "subtract(139549, 201808), divide(#0, 201808)",
        "add(0.6, 0.5), add(#0, 4.7)",
        "divide(3500, 3081)",
        "divide(3581, 21813)",
        "divide(896, 3173)",
        "table_max(provision for income taxes, none)",
        "divide(3087, 55687)",
        "subtract(61912, 367)",
        "subtract(168, 56)",
        "divide(165000, 254000)",
        "divide(166000, 219000)",
        "add(4.6, 5.5), add(#0, const_2)",
        "add(1939734, 1937141)",
        "subtract(1854, 2045)",
        "subtract(248.36, const_100), divide(#0, const_100), subtract(236.20, const_100), divide(#2, const_100), subtract(#1, #3)",
        "multiply(160196, 58.02)",
        "divide(460.1, 1020.1)",
        "add(957.4, 769.1), add(950.4, #0), divide(#1, const_3)",
        "multiply(766801, 40.85), divide(#0, const_1000000)",
        "subtract(1909, 1336), divide(#0, 1336)",
        "subtract(559.7, 515.2), divide(#0, 559.7)",
        "divide(10.4, 61.4), multiply(#0, const_100)",
        "divide(205000, 630000)",
        "subtract(1131, 1165), divide(#0, 1165)",
        "divide(2.3, 0.5)",
        "multiply(5576208, 53.80)",
        "divide(const_3, 401362)",
        "subtract(426.6, 380.2), divide(#0, 380.2)",
        "divide(2800, 73200)",
        "subtract(63.43, 57.37), divide(#0, 57.37)",
        "divide(10.8, 112.7)",
        "subtract(26.4, 18.6), divide(#0, 18.6)",
        "add(411636, 439000)",
        "subtract(11.2, 8.8), divide(#0, 8.8)",
        "divide(294, 30)",
        "multiply(1211143, 308.10)",
        "add(155, -141), add(#0, 4)",
        "subtract(2045, 1854), divide(194, #0)",
        "greater(28000, 19000)",
        "divide(116, 216)",
        "divide(49447, 59801)",
        "multiply(690, const_1000000), multiply(#0, 8.75%)",
        "divide(843, 2936)",
        "divide(604.2, 8290.6)",
        "subtract(164, 199), divide(#0, 199)",
        "divide(1211143, 1217121)",
        "subtract(201, 125), divide(#0, 125)",
        "subtract(201, 100)",
        "divide(11.02, 9.52), divide(#0, 9.52)",
        "add(176, 850)",
        "subtract(21, 47)",
        "add(78227, 81808)",
        "divide(207.62, 97.13)",
        "subtract(207.62, 97.13)",
        "divide(37, 1.4)",
        "divide(102400, 15790)",
        "divide(74360, 180993)",
        "add(1.11, 1.08), divide(#0, 1.08)",
        "divide(1160, 2575)",
        "subtract(86.42, 80.20), divide(#0, 80.20)",
        "multiply(2, const_1000000), divide(#0, 2779)",
        "subtract(368, 68)",
        "subtract(34.3, 38.9), divide(#0, 38.9)",
        "divide(42749, 45686)",
        "divide(496, 6930)",
        "table_average(operating income, none)",
        "subtract(426932, 341003)",
        "subtract(137.90, const_100), divide(#0, const_100)",
        "add(362400, 2000)",
        "subtract(121.48, const_100), divide(#0, const_100)",
        "subtract(746, 554)",
        "subtract(23596, 63003), divide(#0, 63003)",
        "divide(7532, 180993)",
        "subtract(224.65, const_100), divide(#0, const_100)",
        "divide(988, 3332)",
        "divide(11057, 57096)",
        "multiply(762, 41), multiply(713, 42), subtract(#1, #0), divide(#2, #0)",
        "divide(2715, 4932)",
        "table_average(ending balance, none)",
        "multiply(1.4, const_1000), divide(945.5, #0)",
        "subtract(230667, 255534), divide(#0, 255534)",
        "divide(242, 9%)",
        "subtract(31, 30)",
        "subtract(108.11, 118.09), divide(#0, 118.09)",
        "subtract(772, 8867)",
        "divide(13536, 16594)",
        "subtract(2220, 1522), divide(#0, 1522)",
        "table_sum(worldwide, none)",
        "add(367, 78)",
        "table_sum(total, none)",
        "subtract(30.4, 29.0), divide(#0, 29.0)",
        "subtract(37.79, 31.16), divide(#0, 31.16)",
        "subtract(717, 802)",
        "add(53818, -36528), add(#0, 157)",
        "divide(1246, 5424)",
        "divide(327, 184), divide(#0, 327)",
        "divide(521.3, 655.0)",
        "subtract(208.14, 100), divide(#0, 100), divide(const_1, const_5), exp(#1, #2), subtract(#3, const_1)",
        "divide(102400, 619314)",
        "add(203, -379), add(#0, -22)",
        "add(12.1, 9.0), add(#0, 5.7)",
        "divide(5186, 9062)",
        "divide(151.7, 800)",
        "subtract(296.67, const_100), divide(#0, const_100)",
        "subtract(25.2, 6.1), divide(#0, 6.1)",
        "divide(120000, 120000)",
        "divide(1095.6, 2719.3)",
        "divide(217692, 139255)",
        "divide(117, 579)",
        "subtract(15.6, 21.1), divide(#0, 21.1), multiply(#1, const_100)",
        "subtract(-57, -41), divide(#0, -41)",
        "subtract(-726, -1010)",
        "divide(2098, 2014), multiply(2098, #0)",
        "subtract(109435, 73684), divide(#0, 73684)",
        "subtract(2.36, 2.25), multiply(#0, const_100)",
        "divide(574438, const_1000), greater(655.0, #0)",
        "add(9557, 6337), divide(#0, const_2)",
        "add(187, 95), add(5829, #0)",
        "divide(895, 4625)",
        "subtract(11, 11)",
        "divide(541, 2859)",
        "greater(370.32, 323.23)",
        "divide(2047, 6154)",
        "divide(1336, 42546)",
        "subtract(138.29, const_100), divide(100000, const_100), multiply(#1, #0)",
        "subtract(const_4, 3.9), divide(#0, const_4), multiply(#1, const_100)",
        "divide(6900, 31300)",
        "multiply(1.8, 64.20)",
        "subtract(21, 47), divide(#0, 47)",
        "multiply(1226, 78.29)",
        "add(126, 111), add(#0, 112)",
        "divide(6498, 542705)",
        "divide(const_100, 3)",
        "add(110000000, 10000000)",
        "subtract(0.2, 9.4)",
        "divide(12, 29)",
        "subtract(52.25, 39.95)",
        "divide(2424, 7034)",
        "add(257685, 230323), add(#0, 206017), divide(#1, const_3)",
        "subtract(161.43, 150.27), divide(#0, 150.27)",
        "subtract(78, 119)",
        "table_max(tier 2 capital, none)",
        "divide(332, 10591)",
        "multiply(4.9, const_m1), subtract(#0, -3.7), divide(#0, 3.7)",
        "subtract(79.0, 53.9), divide(#0, 79.0), multiply(#1, const_100)",
        "table_min(cash instruments, none)",
        "subtract(55509, 11589)",
        "table_sum(other africa, none)",
        "subtract(335.9, 364.2), divide(#0, 364.2)",
        "subtract(31.9, 33.9)",
        "greater(57.7, 68.9)",
        "table_sum(distillates, none)",
        "greater(162.45, 74.40)",
        "subtract(107.76, const_100), divide(#0, const_100)",
        "subtract(24, 4)",
        "multiply(45686, 37.73)",
        "divide(128.16, const_100)",
        "divide(692, 3165)",
        "subtract(180993, 118314), divide(#0, 118314)",
        "subtract(44.11, 39.03)",
        "divide(14684, 53584)",
        "add(22825000, 49250000)",
        "table_average(operating profit, none)",
        "subtract(4.7, 3.3)",
        "multiply(11, 33.32), multiply(13, 26.93), subtract(#0, #1)",
        "multiply(151945, 24.61)",
        "subtract(17.80, 11.60)",
        "divide(20, 23)",
        "subtract(186, 26), divide(#0, 26)",
        "divide(510, 6652)",
        "multiply(2770, 21.96)",
        "divide(78.6, 108.1)",
        "divide(1.074, 1.209)",
        "add(385, 383), add(#0, 380), divide(#1, const_3)",
        "divide(2467.1, 502.9)",
        "subtract(7.2, 5.5)",
        "divide(57800, 163000)",
        "subtract(500.0, 240.9), divide(#0, 240.9)",
        "subtract(772709, 426932), divide(#0, 426932)",
        "divide(23000, 122300)",
        "divide(2449.9, 15191.5)",
        "add(1.0, 2.3), add(#0, 4.6), divide(#1, const_3)",
        "subtract(438, -291), divide(#0, 291)",
        "divide(11.8, 146.1)",
        "multiply(342313, 113.39), divide(#0, const_1000000)",
        "divide(8.75, 6.91), multiply(#0, 8.75)",
        "subtract(200, 50)",
        "divide(6725, 11664), multiply(#0, const_100)",
        "subtract(705.4, 696.3), divide(#0, 696.3)",
        "subtract(41.9, 4.8)",
        "add(45708, 4800), divide(5080, #0)",
        "subtract(18.1, 6.3)",
        "subtract(2.2, 2.7), divide(#0, 2.7)",
        "table_average(total assets, none)",
        "subtract(6850, 6213), divide(#0, 6213)",
        "subtract(1.6, 1.2), divide(#0, 1.2)",
        "multiply(2.13%, 64.20)",
        "divide(13536, 16594)",
        "add(19, 12)",
        "divide(1024, 5545)",
        "add(const_1, 25%), divide(1.42, #0)",
        "divide(630, 700)",
        "add(1708928, 3629455), divide(1708928, #0)",
        "subtract(378, 419), divide(#0, 419)",
        "subtract(31, 24), divide(#0, 24)",
        "add(171.8, 0.4)",
        "divide(955, 4925)",
        "subtract(707, 48.87)",
        "add(19.8, 21.9), add(17.3, #0), divide(#1, const_3)",
        "subtract(687125, 650212), divide(#0, 650212)",
        "divide(126, 992)",
        "subtract(6608, 1018)",
        "add(17.6, 19.3)",
        "add(760000, 857679), add(#0, 898500), add(#1, 960764), add(#2, 1304431)",
        "subtract(5829, 5735), divide(#0, 5735)",
        "subtract(63, 51), divide(#0, 51)",
        "add(7729, 5400), add(5038, #0), divide(#1, const_3)",
        "subtract(96.67, const_100), divide(#0, const_100)",
        "subtract(109669, 112824)",
        "divide(144, 2473)",
        "divide(503000, 298)",
        "divide(24700, 101500)",
        "divide(1127.6, 2719.3)",
        "divide(5, 4), multiply(#0, 5)",
        "divide(2140954, 151945)",
        "divide(808043, 3700106)",
        "subtract(5829, 5735), divide(#0, 5735)",
        "divide(2402, 21376)",
        "divide(30.7, 47.9)",
        "subtract(495.2, 419.0), divide(#0, 419.0)",
        "divide(43634, 94205)",
        "divide(92, 1)",
        "subtract(8.2, 5.5)",
        "subtract(-5205, -1636), divide(#0, -1636)",
        "subtract(235.63, 104.23), divide(#0, 104.23)",
        "add(21.7, 22.3), add(#0, 22.7), add(#1, 23.2), add(#2, 11)",
        "add(108.7, 138.0), add(#0, 127.1), subtract(#1, 127.1), divide(#2, 127.1)",
        "table_max(provision for credit losses, none)",
        "divide(163000, 57800), divide(#0, 163000)",
        "add(257685, 230323), add(#0, 206017), divide(#1, const_3)",
        "add(574, 173)",
        "table_max(ultimate trend rate, none)",
        "divide(131.8, 148.8), multiply(#0, const_100)",
        "subtract(107, 66), divide(#0, 66)",
        "subtract(572.93, 527.37), divide(#0, 527.37)",
        "subtract(3277, 2880), divide(#0, 2880)",
        "subtract(207.62, const_100), divide(#0, const_100)",
        "subtract(378.5, 398.9), divide(#0, 398.9)",
        "subtract(10.5, 7.1), divide(#0, 7.1)",
        "add(21, 99)",
        "divide(560, 1203)",
        "add(63, 81), divide(19, #0)",
        "divide(149.3, 1020.1)",
        "greater(4.6, 29.0)",
        "add(384102, 121417), add(381415, 65439), subtract(#0, #1)",
        "subtract(459.8, 442.9), divide(#0, 442.9)",
        "subtract(1220, 1214)",
        "divide(116, 1009)",
        "subtract(655.0, 495.2), divide(#0, 495.2)",
        "divide(2.5, 1.6)",
        "add(64001, 289581)",
        "subtract(752707, 593356), divide(#0, 593356)",
        "divide(4214600, 6903188)",
        "subtract(779, 850), divide(#0, 850)",
        "divide(13789, 16054)",
        "subtract(58219, 71267), divide(#0, 71267)",
        "divide(460.1, 1020.1)",
        "subtract(20500, 18100), divide(#0, 18100)",
        "divide(3.9, 12.8)",
        "subtract(289, 270)",
        "subtract(17.7, 19.1), divide(#0, 19.1)",
        "add(104, 61), add(73, #0), divide(#1, const_2), add(#2, const_3), divide(#3, const_2)",
        "subtract(42.1, 38), divide(#0, 38)",
        "subtract(-291, -599), divide(#0, -599)",
        "add(0.3, 0.1)",
        "add(3.4, 2.2)",
        "subtract(911507, 938555), divide(#0, 938555)",
        "divide(61592, const_1000), divide(42.5, #0)",
        "divide(2672, 22258)",
        "add(13.3, 5.4)",
        "subtract(155, 148), divide(#0, 148)",
        "subtract(22.1, 24.0), divide(#0, 24.0)",
        "divide(254000, 107000)",
        "subtract(3.5, 5.3), divide(#0, 5.3)",
        "divide(22, 158)",
        "subtract(74, 110)",
        "divide(8, 2), subtract(#0, 1)",
        "subtract(35.0%, 13.7%)",
        "add(342.9, 78.5)",
        "subtract(370.32, 100), divide(#0, 100), divide(const_1, const_5), exp(#1, #2), subtract(#3, const_1)",
        "divide(264, 210)",
        "subtract(355173, 377677), divide(#0, 377677)",
        "divide(57, 70)",
        "subtract(19201, 23280), divide(#0, 23280)",
        "divide(1205260, 3063816)",
        "greater(4, 1)",
        "multiply(1.2, const_1000), subtract(665, #0), divide(#1, #0)",
        "subtract(100690000, 92710000), divide(#0, 92710000)",
        "subtract(318063, 60224)",
        "divide(332, 121)",
        "divide(200.79, 151.94)",
        "subtract(4.50, 4.25), multiply(#0, 400.0), multiply(#1, const_1000000)",
        "divide(6.2, const_10)",
        "subtract(7327, 20963)",
        "subtract(2.9, 1.5), divide(#0, 1.5)",
        "subtract(1328, 176)",
        "divide(1400000, 17)",
        "subtract(190, 207)",
        "table_average(initial health care trend rate, none)",
        "subtract(248.36, const_100)",
        "subtract(168.4, 148.5), divide(#0, 148.5)",
        "divide(14.9, 546.5)",
        "subtract(28.8, 30.3), divide(#0, 30.3)",
        "divide(35, 130)",
        "divide(1.3, 804)",
        "subtract(19.8, 9.2)",
        "subtract(177.79, 100), divide(const_1, const_5), subtract(#1, const_1), exp(#0, #2), subtract(#3, const_1)",
        "divide(265409, 268766)",
        "divide(18.0, 23.5)",
        "add(43, 47), divide(#0, const_2)",
        "table_sum(vested during the year, none)",
        "divide(const_100, 22), subtract(60.6, #0)",
        "add(9981, 6788), divide(#0, 93033)",
        "multiply(713, 42)",
        "divide(5009, 6304)",
        "subtract(4904, 5051), divide(#0, 5051)",
        "add(171.8, 0.4)",
        "subtract(311.81, const_100), divide(#0, const_100)",
        "subtract(205, 168), divide(#0, 168)",
        "divide(2327.2, 12988.7)",
        "subtract(46957000, 27316000), divide(#0, 27316000)",
        "divide(7001, 684)",
        "subtract(58219, 71267)",
        "subtract(17057.4, 16772.9)",
        "divide(2.6, 35%)",
        "add(242, 177947), divide(242, #0)",
        "divide(1088, 4944)",
        "divide(4959, 989)",
        "subtract(931.3, 973.7), divide(#0, 973.7)",
        "add(40.51, 38.94), divide(#0, const_2)",
        "add(44.72, 34.25), divide(#0, const_2)",
        "subtract(18900, 20500)",
        "divide(100000, const_100), subtract(118.21, const_100), multiply(#0, #1)",
        "divide(47162, 83659)",
        "divide(const_100, 4)",
        "add(169, 138)",
        "subtract(515.2, 559.7), divide(#0, 559.7)",
        "add(265, 172), divide(#0, const_2)",
        "subtract(314.36, const_100), divide(#0, const_100), subtract(223.74, const_100), divide(#2, const_100), subtract(#1, #3)",
        "subtract(28.9, 27.8), divide(#0, 27.8)",
        "subtract(7167.1, 6490.8), divide(#0, 6490.8)",
        "divide(45826, 182650)",
        "add(const_1, 6%), divide(32.73, #0)",
        "divide(472.7, 635.6)",
        "subtract(665, 2239), subtract(#0, 2239)",
        "subtract(973.7, 931.3), divide(18.7, #0)",
        "subtract(473.6, 139.8), divide(#0, 473.6)",
        "divide(2.9, 900.1)",
        "subtract(59.7, 79.0)",
        "add(0.6, 0.7)",
        "divide(115.7, 559.3)",
        "multiply(561, 44)",
        "subtract(8985, 11057)",
        "subtract(857679, 760000), divide(#0, 760000)",
        "divide(153258, 86080)",
        "multiply(9, 26.79)",
        "add(-677, 372)",
        "subtract(27.1, 26.4), divide(#0, 26.4)",
        "table_min(collateral posted, none)",
        "divide(239.5, 802.6)",
        "divide(2360, 6596)",
        "subtract(const_100, 13), divide(#0, const_100), multiply(#1, 2.93)",
        "divide(750, 500), multiply(#0, const_100)",
        "subtract(35.0%, 24.4%)",
        "subtract(7.7, 19.6)",
        "add(63, 81), divide(63, #0)",
        "add(0.6, 0.1)",
        "divide(11057, 57096)",
        "add(172, 179), add(#0, 147)",
        "subtract(1.6, 2.3), divide(#0, 2.3)",
        "subtract(2.6, 1.4)",
        "divide(24, 50)",
        "add(10558, 6426), divide(#0, 23556)",
        "add(5536, 38519)",
        "divide(70, 53), subtract(#0, const_1)",
        "table_max(foreign currency translation, none)",
        "subtract(322.4, 326.5)",
        "divide(4091, 14)",
        "subtract(284, 118)",
        "divide(2094800, 6156900)",
        "divide(5758, 7975)",
        "subtract(621.6, 666.9), divide(#0, 666.9)",
        "subtract(665, 2239)",
        "subtract(156, 15), divide(#0, 15), multiply(#1, const_100)",
        "divide(45, 0.6)",
        "divide(57, 320)",
        "divide(39, 4)",
        "table_sum(total, none)",
        "subtract(324502, 308263), divide(#0, 308263)",
        "greater(286.61, 192.56)",
        "divide(231, 6304)",
        "subtract(4333146, 1837)",
        "divide(325.1, 400.0)",
        "subtract(46.7, 38.9), subtract(#0, 38.9)",
        "divide(86, 5070)",
        "subtract(1.6, 1.2), divide(#0, 1.2)",
        "subtract(25.25, 17.90), divide(#0, 17.90)",
        "subtract(1589, 1141)",
        "subtract(206.49, 169.82), divide(#0, 169.82)",
        "divide(3671500, 132038)",
        "subtract(178.8, const_100), divide(#0, const_100), subtract(123.8, const_100), divide(#2, const_100), subtract(#1, #3)",
        "divide(33.5, 2.5)",
        "divide(1400, 5%)",
        "subtract(14.24, 17.95), divide(#0, 17.95)",
        "add(30, 1)",
        "add(const_1, 23%), divide(9.45, #0)",
        "multiply(1.7, const_100), divide(#0, 7.75)",
        "add(74, 110), divide(#0, const_2)",
        "subtract(917491, 783031), divide(#0, 783031)",
        "divide(const_100, 40)",
        "subtract(802, 711), divide(#0, 802)",
        "multiply(941, 44), multiply(1096, 44), subtract(#1, #0)",
        "add(242, 177947)",
        "subtract(8.00%, 4.70%)",
        "divide(849, 5424)",
        "divide(96, 1717)",
        "divide(const_100, 10)",
        "add(29, 32), add(#0, 13)",
        "divide(17944, 22885)",
        "add(2.86, 2.87)",
        "divide(13400, 101500)",
        "subtract(2045, 1854), divide(33, #0)",
        "divide(4630, 46780)",
        "divide(5.5, const_100), add(#0, 70.6%)",
        "add(800, 700), add(#0, 192), add(#0, 300), divide(#1, #2)",
        "add(32, 38), divide(#0, const_2), multiply(#1, const_1000000)",
        "subtract(22.366, 12.393), divide(#0, 12.393)",
        "divide(const_100, 20)",
        "subtract(5080, 9165), divide(#0, 9165), multiply(#1, const_100)",
        "subtract(1.7, 1.2), divide(#0, 1.2)",
        "multiply(4218065, 15.52)",
        "add(13, 24), add(#0, 49)",
        "subtract(314.36, const_100), divide(#0, const_100)",
        "table_max(derivatives, none)",
        "divide(765, 824)",
        "add(1.3, const_2), divide(#0, const_2), add(76.0, #1)",
        "add(12, const_4), add(#0, const_4)",
        "divide(90, 1594)",
        "add(const_1, 7%), divide(6.22, #0)",
        "divide(574, 1407)",
        "add(43, 47), divide(#0, const_2)",
        "multiply(427195037, 108.11)",
        "subtract(459.8, 398.0), divide(#0, 398.0), multiply(#1, const_100)",
        "subtract(19201, 23280)",
        "divide(1127.6, 2719.3)",
        "subtract(198.27, const_100), divide(#0, const_100)",
        "divide(5687, 6275), subtract(const_1, #0)",
        "divide(130.66, 152.42)",
        "subtract(1.2, 2.2), divide(#0, 1.2)",
        "divide(197, 227)",
        "add(19600, 13900), add(#0, 57800)",
        "divide(50, const_100), multiply(897, #0)",
        "divide(1451, 2500)",
        "subtract(44033, 47267), divide(#0, 47267)",
        "subtract(92, 83), divide(#0, 83)",
        "add(8000, 8000), add(#0, 8000), divide(8000, #1)",
        "add(90, 77), add(64, #0), divide(#1, const_3)",
        "divide(74896, 5587388)",
        "divide(45410, 179633)",
        "subtract(279, 280), divide(#0, 280)",
        "divide(13536, 16594)",
        "table_max(net derivative liabilities under bilateral agreements, none)",
        "table_max(net derivative liabilities under bilateral agreements, none)",
        "add(280, 18.5)",
        "divide(145, 586)",
        "subtract(2.2, 4.1), divide(#0, 4.1)",
        "subtract(195237, 177947), divide(#0, 177947)",
        "divide(64, 54)",
        "divide(2963, 23556)",
        "subtract(233.86, const_100), divide(#0, const_100)",
        "multiply(829, 29%)",
        "divide(34, 3669)",
        "subtract(26.8%, 21.9%)",
        "subtract(911507, 938555)",
        "greater(162.45, 127.66)",
        "divide(82, 18)",
        "divide(-29.4, 931.3)",
        "add(1088, 1105), add(#0, 945)",
        "subtract(161.9, 344.6), divide(#0, 344.6)",
        "divide(5, 6.2)",
        "add(17984, 2248), divide(174335, #0)",
        "subtract(43.81, const_100), divide(#0, const_100), subtract(74.57, const_100), divide(#2, const_100), subtract(#0, #2)",
        "divide(10000, 30000)",
        "divide(172.8, 50.9)",
        "divide(123, 1676)",
        "add(342.9, 78.5), divide(342.9, #0)",
        "subtract(434814, 382739), divide(#0, 382739)",
        "divide(45826, 182650)",
        "subtract(325.1, 400.0), divide(#0, 400.0)",
        "subtract(178.8, const_100), divide(#0, const_100), subtract(113.6, const_100), divide(#2, const_100), subtract(#1, #3)",
        "divide(56616, 146915)",
        "add(23596, 63003), add(50131, #0), add(11589, #1), add(#2, const_4), divide(#3, const_2)",
        "divide(2408, 3772)",
        "subtract(182.87, 149.70), divide(#0, 149.70)",
        "divide(10, const_9)",
        "subtract(39.2, 28.2), divide(#0, 28.2)",
        "multiply(1461, 31.23)",
        "subtract(65.7, 14.7)",
        "multiply(102400, 74.83)",
        "subtract(17.5, 11.7)",
        "divide(1160, 2575)",
        "subtract(248.36, const_100), divide(#0, const_100)",
        "subtract(156, 15), divide(#0, 15), multiply(#1, const_100)",
        "subtract(460, 525), divide(#0, 525)",
        "divide(1700000, 900000)",
        "divide(643, 8369)",
        "divide(4.8, 221.9)",
        "divide(239.5, 802.6)",
        "add(8000, 8000), add(#0, 8000)",
        "subtract(938555, 923225), divide(#0, 923225)",
        "divide(247, 1676)",
        "subtract(104, 87), divide(#0, 87)",
        "subtract(148.8, 134.8)",
        "subtract(711, 438), divide(#0, 438)",
        "divide(563220, 3063816)",
        "divide(319, 88)",
        "divide(3.87%, 2.56%), multiply(3.87%, #0)",
        "divide(5.3, 17.7)",
        "subtract(31.16, 24.57)",
        "multiply(9, const_1000000), divide(#0, 411636)",
        "subtract(22171, 22469), divide(#0, 22469)",
        "divide(500000, const_6)",
        "divide(664, 824)",
        "subtract(272.59, 243.79), divide(#0, 243.79)",
        "subtract(15477, 6040)",
        "add(2.1, 3.7), add(3.0, #0), divide(#1, 3)",
        "divide(390239, 777443)",
        "multiply(const_7, const_1000), divide(10919, #0)",
        "subtract(9.60, 13.25), divide(#0, 13.25)",
        "subtract(634.9, 735.4), divide(#0, 735.4)",
        "divide(500, 4612)",
        "greater(5, 6)",
        "divide(1211143, 1217121)",
        "divide(6882, 70842)",
        "subtract(3008, 3084)",
        "add(2.3, 4.6), add(#0, 9.2), divide(#1, const_3)",
        "divide(1.8, 5.6)",
        "table_average(structured commercial loan vehicles, none)",
        "subtract(3538, 3480), divide(#0, 3480)",
        "multiply(8.86, 3227753)",
        "divide(100.3, 46.7)",
        "divide(209, 191), divide(#0, 191)",
        "subtract(2.6, 2.2), divide(#0, 2.2)",
        "subtract(120905, 127938), divide(#0, 127938)",
        "subtract(666.9, 577.8), divide(#0, 577.8)",
        "divide(3515, 23556)",
        "multiply(335000, 159.35)",
        "divide(3112.0, 13440.0)",
        "subtract(70, 53)",
        "subtract(408164, 391555)",
        "subtract(148.8, 134.8), divide(#0, 134.8), multiply(#1, const_100)",
        "table_average(liabilities, none)",
        "add(74, 110)",
        "add(6.6, 3.7), divide(#0, 426.6)",
        "divide(25400, 16200)",
        "subtract(2.90, 2.60), divide(#0, 2.60)",
        "divide(86.1, 64.5)",
        "subtract(320, 271), divide(#0, 271)",
        "add(1.6, 2.7), add(2.2, #0)",
        "add(385, 383), add(#0, 380), divide(#1, const_3)",
        "subtract(1854, 2045), divide(#0, 2045)",
        "subtract(79.67, 63.00), divide(#0, 63.00)",
        "divide(214.4, 126.6), subtract(#0, const_1), divide(126.6, 70.5), subtract(#2, const_1), subtract(#3, #1)",
        "subtract(27.1, 26.4), divide(#0, 26.4)",
        "add(5.8, 6.3)",
        "add(74360, 46961)",
        "divide(63.84, 93.20)",
        "multiply(90000, 149.28)",
        "divide(2.7, 14.4)",
        "divide(165, 6816)",
        "divide(451.7, 900.0)",
        "subtract(1279337, 1019953), divide(#0, 1019953)",
        "multiply(53.80, 5576208), divide(#0, const_1000000)",
        "multiply(9.5, 33%)",
        "divide(22500, 113300)",
        "table_average(end of year, none)",
        "subtract(35.1, 32.8), divide(#0, 32.8)",
        "divide(43319, 96606)",
        "subtract(109.8, const_1000000), divide(#0, 2616618)",
        "subtract(198.05, 146.97), divide(#0, 146.97)",
        "divide(4.25, 3.71), subtract(#0, const_1)",
        "subtract(63003, 50131)",
        "table_average(net sales, none)",
        "subtract(222510, 200077), divide(#0, 200077)",
        "subtract(121.46, const_100), divide(#0, const_100)",
        "subtract(2.60, 2.55), divide(#0, 2.55)",
        "divide(635, 1000)",
        "subtract(306222, 278395), divide(#0, 278395)",
        "greater(76, 63)",
        "greater(-4096, 891)",
        "multiply(7729, 21%), multiply(5038, 14%), subtract(#0, #1), divide(#2, #1)",
        "add(180, 291)",
        "add(358, 355), add(#0, 360)",
        "subtract(24296, 29002), divide(#0, 29002)",
        "subtract(35%, 32.9%)",
        "subtract(36.3%, 32.9%)",
        "divide(24, 15), subtract(#0, const_1)",
        "subtract(5829, 5735), divide(#0, 5735)",
        "subtract(27885, 35066), divide(#0, 35066)",
        "divide(13.4, 14.7)",
        "add(1597, 816)",
        "divide(2402, 21376)",
        "subtract(1341016, 1270173)",
        "divide(34, 66.3)",
        "subtract(119, 86), add(#0, 86), divide(#1, const_2)",
        "subtract(177.26, 151.16), subtract(#0, 151.16)",
        "subtract(17.3, 16.8), divide(#0, 16.8)",
        "subtract(80.74, 128.16), divide(#0, 128.16)",
        "multiply(5283.3, 15%)",
        "subtract(258.6, 250.0), subtract(#0, 1.4)",
        "divide(1733, 2655)",
        "subtract(11.2, 15.9)",
        "divide(59656, 61368)",
        "subtract(22469, 22956), divide(#0, 22956)",
        "divide(6900, 220600)",
        "add(150, 175), add(#0, 2756)",
        "subtract(47267, 48047), divide(#0, 48047)",
        "divide(4, 158)",
        "subtract(708, 736), divide(#0, 736)",
        "add(531.8, 243.5), divide(#0, 1020.1)",
        "add(9.2, 3.2), add(6.5, #0), divide(#1, const_3)",
        "subtract(217.56, const_100), divide(#0, const_100)",
        "divide(1819, 22258)",
        "multiply(760000, const_1000), multiply(#0, 7.458%)",
        "subtract(1.4, 1.5), divide(#0, 1.5)",
        "divide(27, 5041)",
        "subtract(68, 74)",
        "subtract(30000, 20000), divide(#0, 30000)",
        "subtract(83, 78), divide(#0, 78)",
        "subtract(29.26, 24.57), divide(#0, 24.57)",
        "add(587, 580)",
        "divide(89, 99), subtract(const_1, #0)",
        "divide(0.4, 0.8)",
        "subtract(500.0, 240.9), divide(#0, 240.9)",
        "subtract(29.7, 21.0), divide(#0, 21.0)",
        "multiply(2229188, const_100), divide(#0, 2.50)",
        "subtract(313.45, const_100), divide(#0, const_100), subtract(198.18, const_100), divide(#2, const_100), subtract(#1, #3)",
        "divide(772, 3693)",
        "divide(47162, 83659)",
        "divide(684, 7001)",
        "subtract(169, 138), divide(#0, 138)",
        "add(259.5, 0.2)",
        "subtract(78467, 75716)",
        "divide(96, 581)",
        "add(30, 294)",
        "subtract(4250, 2360), divide(#0, 2360)",
        "subtract(581, 367), divide(#0, 581)",
        "divide(1300000, 61)",
        "subtract(762, 518), divide(#0, 518)",
        "add(515.2, 250)",
        "add(12300, 17000), add(#0, 2800), add(#1, 47800)",
        "subtract(22176, 27885), divide(#0, 27885)",
        "subtract(158578, 118314)",
        "subtract(117.61, const_100), divide(#0, const_100)",
        "divide(32800, 113300)",
        "subtract(22.7, 33.1), divide(#0, 33.1)",
        "divide(17.2, 47.9)",
        "divide(613, 1178)",
        "divide(46984, 172095)",
        "subtract(5301, 4229), divide(#0, 4229)",
        "subtract(109669, 112824), divide(#0, 112824)",
        "subtract(1171, 1701)",
        "subtract(17057.4, 16772.9), divide(#0, 16772.9)",
        "divide(2070, 13430)",
        "add(34, 23), add(13, #0)",
        "divide(465, 7170)",
        "divide(517, 476)",
        "divide(849, 5424)",
        "subtract(33.93, 24.98), divide(#0, 24.98)",
        "add(27, 37)",
        "subtract(11.24, 10.79), divide(#0, 10.79)",
        "add(54, 58), add(#0, 54), divide(#1, const_3)",
        "divide(19733, 61535)",
        "table_average(net unrealized investment gains, none)",
        "divide(110000, 65000)",
        "add(60.15, 41.30), divide(#0, const_2)",
        "add(56616, 217692), add(145095, #0), add(#1, const_3), divide(#2, const_2)",
        "multiply(932, 0.44)",
        "divide(427195037, 153)",
        "subtract(9.09, 5.15), divide(#0, 5.15)",
        "subtract(205, 100)",
        "divide(1962822, 4333146)",
        "divide(3321, 8124)",
        "divide(121.0, 268.4)",
        "divide(19064, const_1000), divide(12.0, #0)",
        "subtract(19.8, 9.2), divide(#0, 9.2)",
        "divide(3329, 1246)",
        "subtract(153258, 86080)",
        "add(30.56, 35.61), divide(#0, const_2)",
        "divide(2690, 18988)",
        "subtract(4566, 3846), divide(#0, 3846)",
        "divide(const_100, 5)",
        "table_sum(asphalt, none)",
        "multiply(480, 27%)",
        "subtract(48.56, 41.39), divide(#0, 41.39)",
        "subtract(5.27, 4.77), divide(#0, 4.77)",
        "subtract(2975, 914)",
        "subtract(28114, 31947), divide(#0, 31947)",
        "add(4934, 28524)",
        "add(149768, 450000)",
        "subtract(336.5, 368.6)",
        "add(228, 219), add(240, #0), divide(#1, const_3)",
        "subtract(164, 30), divide(#0, 30), multiply(#1, const_100)",
        "add(540.8, 167.3)",
        "divide(26466, 32339)",
        "divide(4229, 7857)",
        "divide(265436, 798018)",
        "divide(156, 289)",
        "multiply(200, const_1000000), multiply(#0, 7.375%)",
        "subtract(200, 190)",
        "divide(21, 14.6)",
        "subtract(75, 77), divide(#0, 77)",
        "divide(4819, 5419)",
        "multiply(5754, const_1000), multiply(43.9, const_1000000)",
        "subtract(711, 527), divide(#0, 527)",
        "divide(3152, 4612)",
        "subtract(318.5, 634.9), divide(#0, 634.9)",
        "subtract(37.2, 31.9), divide(#0, 31.9)",
        "subtract(86069, 88215), divide(#0, 88215)",
        "divide(4900, 14773)",
        "multiply(1211143, 308.10), divide(#0, const_1000000)",
        "subtract(45.3, 48.1)",
        "subtract(9.6, 8.7), divide(#0, 8.7)",
        "add(32, 38), multiply(#0, const_1000000)",
        "multiply(50.33, 4999)",
        "subtract(100.8, 9.0)",
        "table_sum(development costs incurred during the period, none)",
        "add(587, 580)",
        "subtract(79.90, 63.45), divide(#0, 63.45)",
        "table_sum(total, none), divide(3465, #0)",
        "subtract(5%, 3%)",
        "divide(108, 619)",
        "subtract(-57, -41), divide(#0, -41)",
        "subtract(151, 136), divide(#0, 136)",
        "divide(378, 1782)",
        "divide(100, 44), multiply(#0, const_1000000)",
        "divide(511.7, 605.5)",
        "subtract(323.7, 335.9), divide(#0, 335.9)",
        "subtract(5058, 4523), divide(#0, 4523)",
        "subtract(7167.1, 6383.0), divide(#0, 6383.0)",
        "subtract(8.25%, 4.50%)",
        "subtract(2180592, 51410)",
        "divide(35.9, 426.6)",
        "multiply(619314, 74.25)",
        "subtract(8959, 8717), divide(#0, 8717)",
        "divide(214.8, 450.1)",
        "subtract(328.4, 339.9), divide(#0, 339.9)",
        "subtract(1546, 7327)",
        "subtract(1224, 1214)",
        "divide(14, 169)",
        "multiply(6474102, 9.10), divide(#0, const_1000000)",
        "divide(75970, 777443)",
        "table_min(effective tax rate, none)",
        "divide(2728290, 2912456)",
        "add(217692, 145095), add(309183, #0), divide(#1, const_3)",
        "table_average(settlements, none)",
        "subtract(8.8, 1.0), divide(#0, 1.0)",
        "divide(12.9, 705.4)",
        "divide(5978, 1217121)",
        "divide(817388, 2030900)",
        "multiply(1084, 108.51)",
        "subtract(8630.9, 7630.0), divide(#0, 7630.0)",
        "subtract(4904, 5051), divide(#0, 5051)",
        "divide(8304, 33.2%)",
        "add(0.2, 9.4), add(#0, 0.6)",
        "subtract(1840, 1730), divide(#0, 1730)",
        "subtract(64.8, const_1000000), divide(#0, 1.11)",
        "divide(61600, 32800)",
        "divide(420.5, 750.0)",
        "subtract(28114, 31947)",
        "add(29, 4), add(8, 2), divide(29, #0), divide(8, #1), subtract(#2, #3)",
        "subtract(313.45, const_100), divide(#0, const_100)",
        "subtract(3.09, 3.20), divide(#0, 3.20)",
        "add(2408, 1364)",
        "add(200, 500), add(#0, 750)",
        "subtract(43.81, const_100), divide(#0, const_100)",
        "divide(43510, 93543)",
        "divide(105, 190)",
        "subtract(236, 3057), divide(#0, 3057)",
        "table_average(expected volatility, none)",
        "divide(const_7, 4.7)",
        "subtract(214, 100), divide(#0, 100)",
        "divide(223.82, 195.02)",
        "multiply(375, 5.0%)",
        "subtract(8.8, 2.9)",
        "subtract(203.87, 161.90)",
        "divide(27318, 51596)",
        "table_max(tier 1 capital, none)",
        "divide(861, 9379)",
        "subtract(92.49, 100), divide(#0, 100)",
        "subtract(1135, 1016), divide(#0, 1016)",
        "divide(const_2, const_5)",
        "subtract(1830, 1909), divide(#0, 1909)",
        "divide(210, 132)",
        "divide(4250, 9241)",
        "subtract(12, 10)",
        "subtract(311.81, const_100), divide(const_1000000, const_100), multiply(#1, #0)",
        "multiply(8945694, 40.85), divide(#0, const_1000000)",
        "add(318063, 110457), add(60224, 77901), subtract(#0, #1)",
        "divide(26053, 32070)",
        "subtract(85.05, 81.99)",
        "divide(2435, 9475)",
        "subtract(2.6, 1.4), divide(#0, 1.4)",
        "divide(2902, 14773)",
        "divide(8368, 16075)",
        "subtract(214, 100), divide(#0, 100), subtract(236, 100), divide(#2, 100), subtract(#1, #3)",
        "multiply(375, 6.00%)",
        "divide(1900, 31300)",
        "divide(370.32, 208.14)",
        "divide(43634, 95112)",
        "divide(144, 1927)",
        "subtract(85, 150), divide(#0, 150)",
        "subtract(5.8, 6.3), divide(#0, 6.3)",
        "subtract(1135, 1016), divide(#0, 1016)",
        "subtract(49447, 367)",
        "divide(338501, 3540009)",
        "divide(131.8, 148.8)",
        "subtract(210, 182)",
        "divide(3538, 50962)",
        "divide(156.6, 17.3), divide(170.6, 21.9), subtract(#0, #1)",
        "subtract(119, 86)",
        "add(38, -110), add(#0, 1)",
        "subtract(18.1, 6.3), subtract(14.6, 5.2), subtract(#0, #1), divide(#2, #1)",
        "divide(38, 129)",
        "add(136, 132), add(#0, 137)",
        "divide(1432, 875)",
        "subtract(127.1, 70.4)",
        "subtract(856240, 911507), divide(#0, 911507)",
        "divide(187, 5829)",
        "greater(538, 503)",
        "divide(1334, 23556)",
        "table_average(net sales, none)",
        "subtract(5829, 100)",
        "subtract(438861, 414067), divide(#0, 414067)",
        "divide(28663, 233584)",
        "add(10.6, 11)",
        "subtract(243.7, 247.9), divide(#0, 247.9)",
        "subtract(7630.0, 6710.4), divide(#0, 6710.4)",
        "divide(1014, 5993)",
        "subtract(16.8, 17.7), divide(#0, 17.7)",
        "add(1594, 1719), add(#0, 1717), add(#1, 1927)",
        "subtract(7327, 20963)",
        "add(5145, 34526)",
        "subtract(534648, 419651), divide(#0, 419651)",
        "subtract(4.36, 6.49), divide(#0, 6.49)",
        "divide(110457, 77901)",
        "divide(14.5, 46.4)",
        "subtract(217692, 145095), divide(#0, 145095), subtract(#1, const_100)",
        "multiply(5400, 45%)",
        "divide(250, 2129)",
        "add(19.4, 19.4), add(#0, 19.4)",
        "greater(217.56, 296.67)",
        "greater(370.32, 208.14)",
        "subtract(17, 30), divide(#0, 30)",
        "multiply(1.345, const_1000), add(#0, 30)",
        "table_min(alternative investments, none)",
        "add(81, 120), divide(#0, const_2)",
        "divide(-36.5, 7.7)",
        "add(2.89, 2.89), add(#0, const_3), divide(#1, const_3)",
        "multiply(612.5, const_1000000), multiply(#0, 4.72%)",
        "add(1473, 4218), divide(#0, const_2)",
        "divide(40859, 138930)",
        "subtract(11589, 55509), divide(#0, 55509)",
        "greater(316.21, 127.90)",
        "divide(17944, 22885)",
        "divide(172099, const_1000), divide(69.80, #0)",
        "divide(3189, 500)",
        "divide(2793, 62.2)",
        "divide(14.9, 546.5)",
        "divide(157, 191)",
        "divide(411.1, 802.6)",
        "divide(587, 2859)",
        "subtract(776, 748), divide(#0, 748)",
        "subtract(684, 1535), divide(#0, 1535)",
        "subtract(546.5, 516.9)",
        "subtract(107551, 28114)",
        "divide(705.4, 703.1), subtract(#0, const_1)",
        "subtract(426.6, 380.2)",
        "subtract(8368, 7874)",
        "add(110000000, 10000000), divide(10000000, #0)",
        "divide(190, 289)",
        "subtract(26.6, 47.6), divide(#0, 47.6)",
        "subtract(98.05, 95.11), divide(#0, 95.11)",
        "subtract(378.5, 412.6)",
        "subtract(3.79, 3.68), subtract(#0, const_100)",
        "subtract(216, 205), divide(#0, 205)",
        "add(79, 91)",
        "subtract(2.50, 2.36), multiply(#0, const_100)",
        "greater(527, 711)",
        "divide(1990, 2655)",
        "multiply(2590898, 22.08), divide(#0, const_1000000)",
        "divide(2010, 22885)",
        "subtract(1925, 1131), divide(#0, 1131)",
        "divide(72, 28)",
        "subtract(121.46, const_100), divide(#0, const_100), subtract(127.07, const_100), divide(#2, const_100), subtract(#1, #3)",
        "divide(16.5, 9.6)",
        "subtract(-16.9, -14.9), divide(const_2, 14.9)",
        "subtract(705.4, 696.3)",
        "subtract(13.1%, 13.0%)",
        "add(24.0, 28.8), add(41.7, #0), divide(#1, const_3)",
        "add(424, 10202)",
        "subtract(236.20, const_100)",
        "multiply(66%, 28383), multiply(40%, 12099), subtract(#0, #1), divide(#2, #1)",
        "add(184.07, 174.62), divide(#0, const_2)",
        "subtract(1770, 1702)",
        "add(265, -557)",
        "subtract(1925, 1131), divide(#0, 1131)",
        "add(1708928, 3629455), divide(3629455, #0)",
        "subtract(1983, 1667), divide(#0, 1667)",
        "add(75, 77), add(#0, 93), divide(#1, const_3)",
        "subtract(127.1, 106.6), divide(#0, 106.6)",
        "subtract(17.0, 18.9)",
        "subtract(127.1, 148.9), divide(#0, 148.9)",
        "add(703.1, 18.2)",
        "subtract(139549, 201808)",
        "multiply(12896599, 73.87)",
        "divide(217692, 139255)",
        "add(64, 54), add(52, #0), add(#1, 19), add(#2, 16), divide(54, #3)",
        "subtract(77, 55), divide(#0, 55)",
        "divide(199, 946)",
        "divide(890, 4932)",
        "divide(205500, 8800)",
        "table_average(protect crack spread values, none)",
        "add(88, 4)",
        "divide(83539, const_1000), divide(#0, 585.3)",
        "divide(987, 205)",
        "multiply(6569200, 4.55), divide(#0, const_1000000)",
        "divide(1451, 2500)",
        "divide(837, 5873)",
        "subtract(127.1, 70.4)",
        "add(231.1, 203.4), add(203.4, #0), add(#1, const_3)",
        "greater(3.6, 1.9)",
        "add(505, 165)",
        "subtract(98.05, 95.11), divide(#0, 95.11)",
        "divide(26363, 59677)",
        "subtract(198.18, const_100), divide(100000, const_100), multiply(#1, #0)",
        "multiply(1125734, 10.91)",
        "subtract(318.46, const_100), divide(#0, const_100)",
        "divide(2590898, 2943694)",
        "divide(7874, 16044)",
        "divide(2073, 13208)",
        "divide(253907, 3543016)",
        "divide(129, 708)",
        "subtract(931.3, 973.7)",
        "divide(26064, 32084)",
        "subtract(26643, 50079), divide(#0, 50079)",
        "divide(16568, 24859)",
        "divide(2.8, 15.2)",
        "divide(30, 169)",
        "divide(153644, 2330532)",
        "add(31.2, 2.7), divide(2.7, #0)",
        "table_max(collateral posted, none)",
        "subtract(153.24, 100), divide(#0, 100)",
        "divide(313.45, 216.54)",
        "add(40620, -18205)",
        "divide(1423, 59677)",
        "divide(79.0, 268.4)",
        "divide(850.0, 650.0)",
        "subtract(1410.5, 1229.0), subtract(#0, 1229.0)",
        "divide(173000, 503000)",
        "subtract(33.9, 32.9)",
        "subtract(101, 114), divide(#0, 114)",
        "subtract(558368, 506032)",
        "subtract(145.51, 100), divide(#0, 100)",
        "subtract(4425, 4277), divide(#0, 4277)",
        "subtract(426932, 341003), divide(#0, 341003)",
        "divide(156, 15)",
        "add(581, 123)",
        "subtract(24.98, 15.32), divide(#0, 15.32)",
        "divide(12806, 22258)",
        "divide(160.62, const_100)",
        "add(10.6, 11), add(#0, 11.2), add(#1, 11.6), add(#2, 11.9)",
        "add(78, 119), add(#0, 86)",
        "subtract(301, 665)",
        "table_sum(accumulated other comprehensive loss, none)",
        "subtract(270.4, 267.8), divide(#0, 267.8)",
        "subtract(1.24, 0.78), divide(#0, 0.78)",
        "divide(160, 72)",
        "divide(54, 0.7)",
        "divide(48, 7.0)",
        "subtract(2.6, 2.6)",
        "subtract(26.3, 28.4), divide(#0, 28.4)",
        "subtract(426932, 341003)",
        "multiply(const_7, const_1000), divide(997, #0)",
        "subtract(384102, 78841)",
        "divide(322.60, 271.10)",
        "subtract(2075, 2068), divide(#0, 2068)",
        "subtract(572.93, 527.37), divide(#0, 527.37)",
        "add(353, 6), subtract(#0, 32)",
        "divide(1088, 4944)",
        "divide(8.6, const_10)",
        "divide(3474, 19941)",
        "divide(47.9, 56.0)",
        "divide(4.8, 212.7)",
        "divide(1364, 3772)",
        "subtract(60, 50)",
        "subtract(211.5, 168.4), divide(#0, 168.4)",
        "subtract(377677, 388669), divide(#0, 388669)",
        "subtract(875, 848)",
        "subtract(5.02, 3.72), divide(#0, 3.72)",
        "subtract(6608, 6770), divide(#0, 6770)",
        "subtract(59677, 17177)",
        "divide(957.4, 1410.5)",
        "subtract(214.4, 126.6)",
        "subtract(16, 73), divide(57, 73)",
        "add(326.5, 328.4), add(#0, 322.4), add(#1, const_3)",
        "subtract(240.29, 100.00)",
        "subtract(9.3, 8.4), add(#0, 8.4)",
        "subtract(559.7, 627.6), divide(#0, 627.6)",
        "subtract(326.5, 328.4)",
        "subtract(509, 707), subtract(#0, 707)",
        "subtract(7.2, 1.2)",
        "subtract(18178, 24296), divide(#0, 24296)",
        "divide(90, 291)",
        "multiply(23.44, 150)",
        "subtract(64350, 40000), divide(#0, 40000)",
        "divide(124, 747)",
        "subtract(143.69, const_100), divide(#0, const_100)",
        "subtract(534648, 419651), divide(#0, 419651)",
        "divide(151, 291)",
        "subtract(84, 75), divide(#0, 75)",
        "divide(4819, 5419)",
        "subtract(8690, 7943), divide(#0, 7943)",
        "add(19941, 21813), add(#0, 23988), add(2440, 3237), add(#2, 4127), divide(#3, #1)",
        "subtract(168, 224), divide(#0, 224)",
        "subtract(136, 133), divide(#0, 133)",
        "divide(433161, 15973855)",
        "subtract(132, 137), divide(#0, 137)",
        "divide(4489, 22560)",
        "subtract(10, 4), divide(#0, 4)",
        "divide(40859, 29808)",
        "subtract(137, 133), divide(#0, 133)",
        "subtract(265436, 188649)",
        "divide(159, 898)",
        "subtract(75, 107), divide(#0, 107)",
        "add(3.5, 2.6), add(#0, 3.7)",
        "subtract(18171, 17282)",
        "divide(592, 992)",
        "divide(155, 898)",
        "subtract(354, 558)",
        "subtract(752707, 593356), divide(#0, 593356)",
        "subtract(2.56, 2.92), divide(#0, 2.92)",
        "subtract(14, 3)",
        "add(134, 133), add(#0, 131), divide(#1, 1203)",
        "add(1277, -466), add(#0, -515)",
        "subtract(1564746, 1482914), multiply(110.17, #0)",
        "subtract(3.87, 2.56), divide(#0, 2.56)",
        "subtract(66000, 64350), divide(#0, 64350)",
        "multiply(113.49, 3629455)",
        "subtract(10, 4)",
        "subtract(148, 124)",
        "subtract(487, 516)",
        "divide(175, 3081)",
        "divide(373, 4545)",
        "divide(2094800, 6156900)",
        "multiply(1.3, const_3)",
        "add(170, 7819)",
        "divide(473, 7170)",
        "divide(4000, 88000)",
        "subtract(153.55, const_100), divide(#0, const_100)",
        "subtract(8.2, const_2), divide(const_2, #0)",
        "subtract(75.55, 100), divide(#0, 100)",
        "divide(4074, 20397)",
        "subtract(342, 301), divide(#0, 301)",
        "subtract(4535, 4180), divide(#0, 4180)",
        "add(217, 216), add(225, #0)",
        "add(750, 1000), divide(#0, 5700)",
        "subtract(56, 34)",
        "subtract(165172, 222427), divide(#0, 222427)",
        "subtract(99, 110)",
        "multiply(3063816, const_4)",
        "divide(574, 304), subtract(#0, const_1)",
        "subtract(516, 234)",
        "divide(23, 2329)",
        "subtract(6.91, 8.75), divide(#0, 8.75)",
        "divide(692, 3165)",
        "divide(61535, 54533)",
        "multiply(1.0, const_1000), multiply(#0, 5.0%)",
        "divide(27318, 51596)",
        "add(211.5, 168.4), add(148.5, #0)",
        "subtract(1415, 699), divide(#0, 699)",
        "divide(1371, 1571)",
        "divide(27301, 52667)",
        "divide(426.1, 787.5)",
        "subtract(99, 110), divide(#0, 110)",
        "subtract(17282, 16058)",
        "subtract(348, 259), divide(#0, 259)",
        "subtract(56, 34)",
        "divide(136462, 1184594)",
        "divide(3147, 5545)",
        "divide(2549621, 6609866)",
        "divide(5312, 24166)",
        "add(262, -472), add(#0, -102)",
        "subtract(1171, 1701)",
        "subtract(8.05, 6.91), divide(#0, 6.91)",
        "subtract(3664, 3474)",
        "add(750, 1000), add(#0, 750), divide(#1, 5700)",
        "subtract(5070, 4535), divide(#0, 4535)",
        "add(5583333, 5583333), divide(#0, const_1000000)",
        "divide(3698, 7034)",
        "divide(2329, 2473)",
        "multiply(1205260, 89.92), multiply(1133106, 92.59), subtract(#0, #1)",
        "divide(448.6, 793.3)",
        "divide(135, 700)",
        "subtract(1917, 1415), divide(#0, 1415)",
        "subtract(99.02, 100), divide(#0, 100)",
        "divide(2975, 24166)",
        "add(318, -57), add(#0, 11), divide(#1, const_3)",
        "divide(3671500, 132038)",
        "add(1.5, 1.4), add(#0, 1.5)"
    ]
}